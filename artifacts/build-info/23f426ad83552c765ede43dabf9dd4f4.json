{"id":"23f426ad83552c765ede43dabf9dd4f4","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/MezoVaultContract.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n// Interface for MUSDToken with mint/burn capabilities\ninterface IMUSDToken {\n    function mint(address to, uint256 amount) external;\n    function burn(address from, uint256 amount) external;\n}\n\n/**\n * @title MezoVaultContract\n * @dev A vault contract that integrates with Mezo's MUSD system\n * This contract allows users to deposit BTC collateral and borrow MUSD\n */\ncontract MezoVaultContract is ReentrancyGuard, Ownable {\n    // MUSD token contract address (will be set during deployment)\n    address public musdToken;\n    \n    // Minimum collateral ratio (110%)\n    uint256 public constant MIN_COLLATERAL_RATIO = 110;\n    \n    // Interest rate (2.5% annually)\n    uint256 public constant INTEREST_RATE = 250; // 2.5% in basis points\n    \n    // BTC price in USD (for demo purposes, set to $50,000)\n    uint256 public constant BTC_PRICE_USD = 50000;\n    \n    // User vault data\n    struct Vault {\n        uint256 collateralAmount; // BTC amount (in wei)\n        uint256 borrowedAmount;   // MUSD amount (in wei)\n        uint256 lastUpdateTime;  // Last interest calculation time\n        bool exists;\n    }\n    \n    // Mapping from user address to vault data\n    mapping(address => Vault) public vaults;\n    \n    // Total collateral and borrowed amounts\n    uint256 public totalCollateral;\n    uint256 public totalBorrowed;\n    \n    // Events\n    event CollateralDeposited(address indexed user, uint256 amount);\n    event MUSDBorrowed(address indexed user, uint256 amount);\n    event MUSDRepaid(address indexed user, uint256 amount);\n    event CollateralWithdrawn(address indexed user, uint256 amount);\n    // Send functionality removed for focused vault\n    event VaultLiquidated(address indexed user, uint256 collateralAmount, uint256 debtAmount);\n    \n    constructor(address _musdToken) Ownable(msg.sender) {\n        musdToken = _musdToken;\n    }\n    \n    /**\n     * @dev Deposit BTC collateral to create or increase vault\n     * @param amount Amount of BTC to deposit (in wei)\n     */\n    function depositCollateral(uint256 amount) external payable nonReentrant {\n        require(amount > 0, \"Amount must be greater than 0\");\n        require(msg.value == amount, \"Incorrect ETH amount\");\n        \n        Vault storage vault = vaults[msg.sender];\n        \n        // Update interest if vault exists\n        if (vault.exists) {\n            _updateInterest(msg.sender);\n        }\n        \n        vault.collateralAmount += amount;\n        vault.exists = true;\n        vault.lastUpdateTime = block.timestamp;\n        \n        totalCollateral += amount;\n        \n        emit CollateralDeposited(msg.sender, amount);\n    }\n    \n    /**\n     * @dev Borrow MUSD against BTC collateral\n     * @param amount Amount of MUSD to borrow (in wei)\n     */\n    function borrowMUSD(uint256 amount) external nonReentrant {\n        require(amount > 0, \"Amount must be greater than 0\");\n        \n        Vault storage vault = vaults[msg.sender];\n        require(vault.exists, \"Vault does not exist\");\n        \n        _updateInterest(msg.sender);\n        \n        uint256 newBorrowedAmount = vault.borrowedAmount + amount;\n        require(_isHealthyCollateralRatio(vault.collateralAmount, newBorrowedAmount), \"Insufficient collateral\");\n        \n        vault.borrowedAmount = newBorrowedAmount;\n        totalBorrowed += amount;\n        \n        // Mint MUSD and send to user - ensure minting succeeds\n        try IMUSDToken(musdToken).mint(msg.sender, amount) {\n            // Mint successful\n        } catch Error(string memory reason) {\n            revert(string(abi.encodePacked(\"Minting failed: \", reason)));\n        } catch {\n            revert(\"Minting failed: Unknown error\");\n        }\n        \n        emit MUSDBorrowed(msg.sender, amount);\n    }\n    \n    /**\n     * @dev Repay MUSD debt (partial or full repayment supported)\n     * @param amount Amount of MUSD to repay (in wei)\n     * @notice Partial repayment is allowed. If amount > debt, only the debt amount is repaid.\n     *         If amount < debt, the exact amount specified is repaid and remaining debt continues to accrue interest.\n     */\n    function repayMUSD(uint256 amount) external nonReentrant {\n        require(amount > 0, \"Amount must be greater than 0\");\n        \n        Vault storage vault = vaults[msg.sender];\n        require(vault.exists, \"Vault does not exist\");\n        \n        _updateInterest(msg.sender);\n        \n        uint256 actualRepayAmount = amount > vault.borrowedAmount ? vault.borrowedAmount : amount;\n        \n        vault.borrowedAmount -= actualRepayAmount;\n        totalBorrowed -= actualRepayAmount;\n        \n        // First approve if needed, then burn the MUSD\n        IERC20(musdToken).transferFrom(msg.sender, address(this), actualRepayAmount);\n        IMUSDToken(musdToken).burn(address(this), actualRepayAmount);\n        \n        emit MUSDRepaid(msg.sender, actualRepayAmount);\n    }\n    \n    /**\n     * @dev Withdraw BTC collateral\n     * @param amount Amount of BTC to withdraw (in wei)\n     */\n    function withdrawCollateral(uint256 amount) external nonReentrant {\n        require(amount > 0, \"Amount must be greater than 0\");\n        \n        Vault storage vault = vaults[msg.sender];\n        require(vault.exists, \"Vault does not exist\");\n        \n        _updateInterest(msg.sender);\n        \n        // Verify sufficient collateral\n        require(vault.collateralAmount >= amount, \"Insufficient collateral\");\n        \n        // If there is outstanding debt, only allow withdrawal that maintains collateral ratio\n        if (vault.borrowedAmount > 0) {\n            // After withdrawal, ensure health is maintained\n            uint256 remainingCollateral = vault.collateralAmount - amount;\n            require(_isHealthyCollateralRatio(remainingCollateral, vault.borrowedAmount), \"Insufficient collateral ratio after withdrawal\");\n        }\n\n        uint256 newCollateralAmount = vault.collateralAmount - amount;\n        vault.collateralAmount = newCollateralAmount;\n        totalCollateral -= amount;\n        \n        // Transfer BTC to user\n        payable(msg.sender).transfer(amount);\n        \n        emit CollateralWithdrawn(msg.sender, amount);\n    }\n\n    /**\n     * @dev Compute maximum BTC withdrawable while staying above the minimum collateral ratio\n     * @param user User address\n     * @return Amount of BTC (in wei) that can be withdrawn right now\n     */\n    function getMaxWithdrawable(address user) external view returns (uint256) {\n        Vault memory vault = vaults[user];\n        if (!vault.exists || vault.collateralAmount == 0) {\n            return 0;\n        }\n\n        // If no debt, full collateral is withdrawable\n        if (vault.borrowedAmount == 0) {\n            return vault.collateralAmount;\n        }\n\n        // Calculate the minimum collateral required to maintain MIN_COLLATERAL_RATIO after withdrawal\n        // Condition: (remainingCollateral * BTC_PRICE_USD * 10000) / borrowedAmount >= MIN_COLLATERAL_RATIO\n        // → remainingCollateral >= (MIN_COLLATERAL_RATIO * borrowedAmount) / (BTC_PRICE_USD * 10000)\n        uint256 requiredCollateral = (MIN_COLLATERAL_RATIO * vault.borrowedAmount) / (BTC_PRICE_USD * 10000);\n\n        if (vault.collateralAmount <= requiredCollateral) {\n            return 0;\n        }\n\n        uint256 maxWithdraw = vault.collateralAmount - requiredCollateral;\n        return maxWithdraw;\n    }\n    \n    // sendCollateral removed\n    \n    /**\n     * @dev Get user's collateral ratio\n     * @param user User address\n     * @return Collateral ratio in basis points (11000 = 110%)\n     */\n    function getCollateralRatio(address user) external view returns (uint256) {\n        Vault memory vault = vaults[user];\n        if (vault.borrowedAmount == 0) return 0;\n        \n        // Convert collateral to USD value (both in same units)\n        // collateralAmount is in wei, BTC_PRICE_USD is in USD\n        // collateralValue = collateralAmount * BTC_PRICE_USD (in wei*USD units)\n        uint256 collateralValue = vault.collateralAmount * BTC_PRICE_USD;\n        return (collateralValue * 10000) / vault.borrowedAmount;\n    }\n    \n    /**\n     * @dev Get user's health factor\n     * @param user User address\n     * @return Health factor (100 = 1.0)\n     */\n    function getHealthFactor(address user) external view returns (uint256) {\n        uint256 collateralRatio = this.getCollateralRatio(user);\n        if (collateralRatio == 0) return 0;\n        return (collateralRatio * 100) / MIN_COLLATERAL_RATIO;\n    }\n    \n    /**\n     * @dev Get user's collateral balance\n     * @param user User address\n     * @return Collateral amount in wei\n     */\n    function getCollateralBalance(address user) external view returns (uint256) {\n        return vaults[user].collateralAmount;\n    }\n    \n    /**\n     * @dev Get user's borrowed amount\n     * @param user User address\n     * @return Borrowed amount in wei\n     */\n    function getBorrowedAmount(address user) external view returns (uint256) {\n        return vaults[user].borrowedAmount;\n    }\n    \n    /**\n     * @dev Get user's current debt including accrued interest (read-only)\n     * @param user User address\n     * @return Current debt in wei (borrowed + accrued interest since last update)\n     */\n    function getCurrentDebt(address user) external view returns (uint256) {\n        Vault memory vault = vaults[user];\n        if (!vault.exists || vault.borrowedAmount == 0) {\n            return 0;\n        }\n        uint256 timeElapsed = block.timestamp - vault.lastUpdateTime;\n        uint256 interest = (vault.borrowedAmount * INTEREST_RATE * timeElapsed) / (365 days * 10000);\n        return vault.borrowedAmount + interest;\n    }\n    \n    /**\n     * @dev Get current interest rate\n     * @return Interest rate in basis points\n     */\n    function getInterestRate() external pure returns (uint256) {\n        return INTEREST_RATE;\n    }\n    \n    /**\n     * @dev Get liquidation price for user\n     * @param user User address\n     * @return Liquidation price in USD\n     */\n    function getLiquidationPrice(address user) external view returns (uint256) {\n        Vault memory vault = vaults[user];\n        if (vault.collateralAmount == 0) return 0;\n        \n        // Liquidation price = (borrowed amount * min ratio) / collateral amount\n        return (vault.borrowedAmount * MIN_COLLATERAL_RATIO) / vault.collateralAmount;\n    }\n    \n    /**\n     * @dev Check if collateral ratio is healthy\n     * @param collateralAmount Collateral amount\n     * @param borrowedAmount Borrowed amount\n     * @return True if healthy\n     */\n    function _isHealthyCollateralRatio(uint256 collateralAmount, uint256 borrowedAmount) internal view returns (bool) {\n        if (borrowedAmount == 0) return true;\n        \n        // Convert collateral to USD value (both in same units: wei * USD)\n        // collateralAmount is in wei (1 BTC = 1e18 wei)\n        // BTC_PRICE_USD is in USD (50000 = $50,000)\n        // collateralValue = collateralAmount (wei) * BTC_PRICE_USD (USD) = value in wei*USD units\n        // borrowedAmount is in wei (MUSD uses 18 decimals)\n        // To compare, we need: (collateralValue * 10000) / borrowedAmount >= MIN_COLLATERAL_RATIO\n        // Simplified: (collateralAmount * BTC_PRICE_USD * 10000) / borrowedAmount >= 110\n        uint256 collateralValue = collateralAmount * BTC_PRICE_USD;\n        uint256 collateralRatio = (collateralValue * 10000) / borrowedAmount;\n        \n        return collateralRatio >= MIN_COLLATERAL_RATIO;\n    }\n    \n    /**\n     * @dev Update interest for a vault\n     * @param user User address\n     */\n    function _updateInterest(address user) internal {\n        Vault storage vault = vaults[user];\n        if (vault.borrowedAmount == 0) return;\n        \n        uint256 timeElapsed = block.timestamp - vault.lastUpdateTime;\n        uint256 interest = (vault.borrowedAmount * INTEREST_RATE * timeElapsed) / (365 days * 10000);\n        \n        vault.borrowedAmount += interest;\n        vault.lastUpdateTime = block.timestamp;\n    }\n    \n    /**\n     * @dev Emergency function to withdraw contract balance (owner only)\n     */\n    function emergencyWithdraw() external onlyOwner {\n        payable(owner()).transfer(address(this).balance);\n    }\n    \n    /**\n     * @dev Receive function to accept ETH deposits\n     */\n    receive() external payable {\n        // Allow direct ETH deposits\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> contracts/MezoVaultContract.sol:289:5:\n    |\n289 |     function _isHealthyCollateralRatio(uint256 collateralAmount, uint256 borrowedAmount) internal view returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":11710,"file":"contracts/MezoVaultContract.sol","start":10790},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[255],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":256,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":255,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,255],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[225]},"id":226,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"133:71:1","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":225,"linearizedBaseContracts":[225],"name":"IERC20","nameLocation":"215:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"228:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":159,"name":"Transfer","nameLocation":"397:8:1","nodeType":"EventDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:1","nodeType":"VariableDeclaration","scope":159,"src":"406:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:1","nodeType":"VariableDeclaration","scope":159,"src":"428:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":157,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:1","nodeType":"VariableDeclaration","scope":159,"src":"448:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:1"},"src":"391:72:1"},{"anonymous":false,"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"469:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":168,"name":"Approval","nameLocation":"628:8:1","nodeType":"EventDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:1","nodeType":"VariableDeclaration","scope":168,"src":"637:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":164,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:1","nodeType":"VariableDeclaration","scope":168,"src":"660:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:1","nodeType":"VariableDeclaration","scope":168,"src":"685:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":165,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:1"},"src":"622:78:1"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"706:65:1","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":174,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:1","nodeType":"FunctionDefinition","parameters":{"id":170,"nodeType":"ParameterList","parameters":[],"src":"796:2:1"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":174,"src":"822:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:1"},"scope":225,"src":"776:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"837:71:1","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":182,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:1","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"account","nameLocation":"940:7:1","nodeType":"VariableDeclaration","scope":182,"src":"932:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:1"},"returnParameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":182,"src":"972:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:1"},"scope":225,"src":"913:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"987:213:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"1231:2:1","nodeType":"VariableDeclaration","scope":192,"src":"1223:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"1243:5:1","nodeType":"VariableDeclaration","scope":192,"src":"1235:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"1268:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:1"},"scope":225,"src":"1205:69:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"1280:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":202,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:1","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"owner","nameLocation":"1576:5:1","nodeType":"VariableDeclaration","scope":202,"src":"1568:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"spender","nameLocation":"1591:7:1","nodeType":"VariableDeclaration","scope":202,"src":"1583:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:1"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":202,"src":"1623:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:1"},"scope":225,"src":"1549:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"1638:667:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":212,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:1","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"spender","nameLocation":"2335:7:1","nodeType":"VariableDeclaration","scope":212,"src":"2327:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":204,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"value","nameLocation":"2352:5:1","nodeType":"VariableDeclaration","scope":212,"src":"2344:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:1"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":212,"src":"2377:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":209,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:1"},"scope":225,"src":"2310:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"2389:297:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":224,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:1","nodeType":"FunctionDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"from","nameLocation":"2721:4:1","nodeType":"VariableDeclaration","scope":224,"src":"2713:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"to","nameLocation":"2735:2:1","nodeType":"VariableDeclaration","scope":224,"src":"2727:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":219,"mutability":"mutable","name":"value","nameLocation":"2747:5:1","nodeType":"VariableDeclaration","scope":224,"src":"2739:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:1"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"2772:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":221,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:1"},"scope":225,"src":"2691:87:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":226,"src":"205:2575:1","usedErrors":[],"usedEvents":[159,168]}],"src":"106:2675:1"},"id":1},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[255]},"id":256,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":227,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"127:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":255,"linearizedBaseContracts":[255],"name":"Context","nameLocation":"642:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":236,"nodeType":"Block","src":"718:34:2","statements":[{"expression":{"expression":{"id":233,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:2","memberName":"sender","nodeType":"MemberAccess","src":"735:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":232,"id":235,"nodeType":"Return","src":"728:17:2"}]},"id":237,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:2","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[],"src":"675:2:2"},"returnParameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"709:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:2"},"scope":255,"src":"656:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":245,"nodeType":"Block","src":"825:32:2","statements":[{"expression":{"expression":{"id":242,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:2","memberName":"data","nodeType":"MemberAccess","src":"842:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":241,"id":244,"nodeType":"Return","src":"835:15:2"}]},"id":246,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:2","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[],"src":"775:2:2"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":246,"src":"809:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":239,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:2"},"scope":255,"src":"758:99:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":253,"nodeType":"Block","src":"935:25:2","statements":[{"expression":{"hexValue":"30","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":250,"id":252,"nodeType":"Return","src":"945:8:2"}]},"id":254,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:2","nodeType":"FunctionDefinition","parameters":{"id":247,"nodeType":"ParameterList","parameters":[],"src":"892:2:2"},"returnParameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":254,"src":"926:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:2"},"scope":255,"src":"863:97:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":256,"src":"624:338:2","usedErrors":[],"usedEvents":[]}],"src":"101:862:2"},"id":2},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[324]},"id":325,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":257,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:3"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"135:894:3","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":324,"linearizedBaseContracts":[324],"name":"ReentrancyGuard","nameLocation":"1048:15:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":261,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:3","nodeType":"VariableDeclaration","scope":324,"src":"1818:40:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":264,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:3","nodeType":"VariableDeclaration","scope":324,"src":"1864:36:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":266,"mutability":"mutable","name":"_status","nameLocation":"1923:7:3","nodeType":"VariableDeclaration","scope":324,"src":"1907:23:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"1937:52:3","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":269,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:3","nodeType":"ErrorDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[],"src":"2028:2:3"},"src":"1994:37:3"},{"body":{"id":276,"nodeType":"Block","src":"2051:38:3","statements":[{"expression":{"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":272,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"2061:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":273,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2071:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":275,"nodeType":"ExpressionStatement","src":"2061:21:3"}]},"id":277,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[],"src":"2048:2:3"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[],"src":"2051:0:3"},"scope":324,"src":"2037:52:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":287,"nodeType":"Block","src":"2490:79:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":280,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"2500:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":282,"nodeType":"ExpressionStatement","src":"2500:21:3"},{"id":283,"nodeType":"PlaceholderStatement","src":"2531:1:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":284,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"2542:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":286,"nodeType":"ExpressionStatement","src":"2542:20:3"}]},"documentation":{"id":278,"nodeType":"StructuredDocumentation","src":"2095:366:3","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":288,"name":"nonReentrant","nameLocation":"2475:12:3","nodeType":"ModifierDefinition","parameters":{"id":279,"nodeType":"ParameterList","parameters":[],"src":"2487:2:3"},"src":"2466:103:3","virtual":false,"visibility":"internal"},{"body":{"id":303,"nodeType":"Block","src":"2614:268:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":291,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"2702:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":292,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2713:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":298,"nodeType":"IfStatement","src":"2698:86:3","trueBody":{"id":297,"nodeType":"Block","src":"2722:62:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":294,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"2743:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":296,"nodeType":"RevertStatement","src":"2736:37:3"}]}},{"expression":{"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":299,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"2858:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":300,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2868:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":302,"nodeType":"ExpressionStatement","src":"2858:17:3"}]},"id":304,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:3","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[],"src":"2603:2:3"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"2614:0:3"},"scope":324,"src":"2575:307:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":311,"nodeType":"Block","src":"2926:170:3","statements":[{"expression":{"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":307,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3068:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":308,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"3078:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":310,"nodeType":"ExpressionStatement","src":"3068:21:3"}]},"id":312,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:3","nodeType":"FunctionDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[],"src":"2915:2:3"},"returnParameters":{"id":306,"nodeType":"ParameterList","parameters":[],"src":"2926:0:3"},"scope":324,"src":"2888:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":322,"nodeType":"Block","src":"3339:42:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":318,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3356:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":319,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3367:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":317,"id":321,"nodeType":"Return","src":"3349:25:3"}]},"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"3102:168:3","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":323,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:3","nodeType":"FunctionDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[],"src":"3307:2:3"},"returnParameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":323,"src":"3333:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":315,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:3"},"scope":324,"src":"3275:106:3","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":325,"src":"1030:2353:3","usedErrors":[269],"usedEvents":[]}],"src":"109:3275:3"},"id":3},"contracts/MezoVaultContract.sol":{"ast":{"absolutePath":"contracts/MezoVaultContract.sol","exportedSymbols":{"Context":[255],"IERC20":[225],"IMUSDToken":[344],"MezoVaultContract":[1154],"Ownable":[147],"ReentrancyGuard":[324]},"id":1155,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":326,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":327,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1155,"sourceUnit":226,"src":"58:56:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1155,"sourceUnit":325,"src":"115:59:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":329,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1155,"sourceUnit":148,"src":"175:52:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IMUSDToken","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":344,"linearizedBaseContracts":[344],"name":"IMUSDToken","nameLocation":"294:10:4","nodeType":"ContractDefinition","nodes":[{"functionSelector":"40c10f19","id":336,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"320:4:4","nodeType":"FunctionDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"to","nameLocation":"333:2:4","nodeType":"VariableDeclaration","scope":336,"src":"325:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"325:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"amount","nameLocation":"345:6:4","nodeType":"VariableDeclaration","scope":336,"src":"337:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"337:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"324:28:4"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[],"src":"361:0:4"},"scope":344,"src":"311:51:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9dc29fac","id":343,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"376:4:4","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"from","nameLocation":"389:4:4","nodeType":"VariableDeclaration","scope":343,"src":"381:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"381:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"amount","nameLocation":"403:6:4","nodeType":"VariableDeclaration","scope":343,"src":"395:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"395:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"380:30:4"},"returnParameters":{"id":342,"nodeType":"ParameterList","parameters":[],"src":"419:0:4"},"scope":344,"src":"367:53:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1155,"src":"284:138:4","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":346,"name":"ReentrancyGuard","nameLocations":["627:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":324,"src":"627:15:4"},"id":347,"nodeType":"InheritanceSpecifier","src":"627:15:4"},{"baseName":{"id":348,"name":"Ownable","nameLocations":["644:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"644:7:4"},"id":349,"nodeType":"InheritanceSpecifier","src":"644:7:4"}],"canonicalName":"MezoVaultContract","contractDependencies":[],"contractKind":"contract","documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"424:172:4","text":" @title MezoVaultContract\n @dev A vault contract that integrates with Mezo's MUSD system\n This contract allows users to deposit BTC collateral and borrow MUSD"},"fullyImplemented":true,"id":1154,"linearizedBaseContracts":[1154,147,255,324],"name":"MezoVaultContract","nameLocation":"606:17:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"9d78d46b","id":351,"mutability":"mutable","name":"musdToken","nameLocation":"740:9:4","nodeType":"VariableDeclaration","scope":1154,"src":"725:24:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":350,"name":"address","nodeType":"ElementaryTypeName","src":"725:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"functionSelector":"7a9fffb7","id":354,"mutability":"constant","name":"MIN_COLLATERAL_RATIO","nameLocation":"823:20:4","nodeType":"VariableDeclaration","scope":1154,"src":"799:50:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":352,"name":"uint256","nodeType":"ElementaryTypeName","src":"799:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313130","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"846:3:4","typeDescriptions":{"typeIdentifier":"t_rational_110_by_1","typeString":"int_const 110"},"value":"110"},"visibility":"public"},{"constant":true,"functionSelector":"5b72a33a","id":357,"mutability":"constant","name":"INTEREST_RATE","nameLocation":"921:13:4","nodeType":"VariableDeclaration","scope":1154,"src":"897:43:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":355,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323530","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:4","typeDescriptions":{"typeIdentifier":"t_rational_250_by_1","typeString":"int_const 250"},"value":"250"},"visibility":"public"},{"constant":true,"functionSelector":"154fefc2","id":360,"mutability":"constant","name":"BTC_PRICE_USD","nameLocation":"1059:13:4","nodeType":"VariableDeclaration","scope":1154,"src":"1035:45:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"1035:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3530303030","id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1075:5:4","typeDescriptions":{"typeIdentifier":"t_rational_50000_by_1","typeString":"int_const 50000"},"value":"50000"},"visibility":"public"},{"canonicalName":"MezoVaultContract.Vault","id":369,"members":[{"constant":false,"id":362,"mutability":"mutable","name":"collateralAmount","nameLocation":"1145:16:4","nodeType":"VariableDeclaration","scope":369,"src":"1137:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":361,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"borrowedAmount","nameLocation":"1202:14:4","nodeType":"VariableDeclaration","scope":369,"src":"1194:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":363,"name":"uint256","nodeType":"ElementaryTypeName","src":"1194:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"lastUpdateTime","nameLocation":"1260:14:4","nodeType":"VariableDeclaration","scope":369,"src":"1252:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":365,"name":"uint256","nodeType":"ElementaryTypeName","src":"1252:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"exists","nameLocation":"1324:6:4","nodeType":"VariableDeclaration","scope":369,"src":"1319:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":367,"name":"bool","nodeType":"ElementaryTypeName","src":"1319:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Vault","nameLocation":"1121:5:4","nodeType":"StructDefinition","scope":1154,"src":"1114:223:4","visibility":"public"},{"constant":false,"functionSelector":"a622ee7c","id":374,"mutability":"mutable","name":"vaults","nameLocation":"1427:6:4","nodeType":"VariableDeclaration","scope":1154,"src":"1394:39:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vault_$369_storage_$","typeString":"mapping(address => struct MezoVaultContract.Vault)"},"typeName":{"id":373,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"1402:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1394:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vault_$369_storage_$","typeString":"mapping(address => struct MezoVaultContract.Vault)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":372,"nodeType":"UserDefinedTypeName","pathNode":{"id":371,"name":"Vault","nameLocations":["1413:5:4"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"1413:5:4"},"referencedDeclaration":369,"src":"1413:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault"}}},"visibility":"public"},{"constant":false,"functionSelector":"4ac8eb5f","id":376,"mutability":"mutable","name":"totalCollateral","nameLocation":"1504:15:4","nodeType":"VariableDeclaration","scope":1154,"src":"1489:30:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint256","nodeType":"ElementaryTypeName","src":"1489:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"4c19386c","id":378,"mutability":"mutable","name":"totalBorrowed","nameLocation":"1540:13:4","nodeType":"VariableDeclaration","scope":1154,"src":"1525:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"1525:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"d7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142","id":384,"name":"CollateralDeposited","nameLocation":"1584:19:4","nodeType":"EventDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1620:4:4","nodeType":"VariableDeclaration","scope":384,"src":"1604:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":379,"name":"address","nodeType":"ElementaryTypeName","src":"1604:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":382,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1634:6:4","nodeType":"VariableDeclaration","scope":384,"src":"1626:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":381,"name":"uint256","nodeType":"ElementaryTypeName","src":"1626:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1603:38:4"},"src":"1578:64:4"},{"anonymous":false,"eventSelector":"20da8f6e39cc42d87e1a570c1a21fe80e2882e71d765e5543d17a07564495278","id":390,"name":"MUSDBorrowed","nameLocation":"1653:12:4","nodeType":"EventDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1682:4:4","nodeType":"VariableDeclaration","scope":390,"src":"1666:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"1666:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":388,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1696:6:4","nodeType":"VariableDeclaration","scope":390,"src":"1688:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1665:38:4"},"src":"1647:57:4"},{"anonymous":false,"eventSelector":"d8e31e478118d9c8ea5f823945962d1e74951bdee736d578121095bff7d55018","id":396,"name":"MUSDRepaid","nameLocation":"1715:10:4","nodeType":"EventDefinition","parameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1742:4:4","nodeType":"VariableDeclaration","scope":396,"src":"1726:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":391,"name":"address","nodeType":"ElementaryTypeName","src":"1726:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":394,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1756:6:4","nodeType":"VariableDeclaration","scope":396,"src":"1748:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"1748:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1725:38:4"},"src":"1709:55:4"},{"anonymous":false,"eventSelector":"c30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d","id":402,"name":"CollateralWithdrawn","nameLocation":"1775:19:4","nodeType":"EventDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1811:4:4","nodeType":"VariableDeclaration","scope":402,"src":"1795:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"1795:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":400,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1825:6:4","nodeType":"VariableDeclaration","scope":402,"src":"1817:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1794:38:4"},"src":"1769:64:4"},{"anonymous":false,"eventSelector":"35de7efaf57011203f851394c868d6d03b732d97ba0a34194c9e9d2873d51ef3","id":410,"name":"VaultLiquidated","nameLocation":"1896:15:4","nodeType":"EventDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1928:4:4","nodeType":"VariableDeclaration","scope":410,"src":"1912:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":403,"name":"address","nodeType":"ElementaryTypeName","src":"1912:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":406,"indexed":false,"mutability":"mutable","name":"collateralAmount","nameLocation":"1942:16:4","nodeType":"VariableDeclaration","scope":410,"src":"1934:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"1934:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":408,"indexed":false,"mutability":"mutable","name":"debtAmount","nameLocation":"1968:10:4","nodeType":"VariableDeclaration","scope":410,"src":"1960:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":407,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:68:4"},"src":"1890:90:4"},{"body":{"id":423,"nodeType":"Block","src":"2042:39:4","statements":[{"expression":{"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":419,"name":"musdToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"2052:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":420,"name":"_musdToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"2064:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2052:22:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":422,"nodeType":"ExpressionStatement","src":"2052:22:4"}]},"id":424,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":415,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2030:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2034:6:4","memberName":"sender","nodeType":"MemberAccess","src":"2030:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":417,"kind":"baseConstructorSpecifier","modifierName":{"id":414,"name":"Ownable","nameLocations":["2022:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2022:7:4"},"nodeType":"ModifierInvocation","src":"2022:19:4"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"_musdToken","nameLocation":"2010:10:4","nodeType":"VariableDeclaration","scope":424,"src":"2002:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"2002:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2001:20:4"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"2042:0:4"},"scope":1154,"src":"1990:91:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":493,"nodeType":"Block","src":"2298:556:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":433,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"2316:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2325:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2316:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","id":436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2328:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""},"value":"Amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""}],"id":432,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2308:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":438,"nodeType":"ExpressionStatement","src":"2308:52:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":440,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2378:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2382:5:4","memberName":"value","nodeType":"MemberAccess","src":"2378:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":442,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"2391:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2378:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f72726563742045544820616d6f756e74","id":444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2399:22:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b","typeString":"literal_string \"Incorrect ETH amount\""},"value":"Incorrect ETH amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b","typeString":"literal_string \"Incorrect ETH amount\""}],"id":439,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2370:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2370:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"ExpressionStatement","src":"2370:52:4"},{"assignments":[449],"declarations":[{"constant":false,"id":449,"mutability":"mutable","name":"vault","nameLocation":"2455:5:4","nodeType":"VariableDeclaration","scope":493,"src":"2441:19:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault"},"typeName":{"id":448,"nodeType":"UserDefinedTypeName","pathNode":{"id":447,"name":"Vault","nameLocations":["2441:5:4"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"2441:5:4"},"referencedDeclaration":369,"src":"2441:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault"}},"visibility":"internal"}],"id":454,"initialValue":{"baseExpression":{"id":450,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"2463:6:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vault_$369_storage_$","typeString":"mapping(address => struct MezoVaultContract.Vault storage ref)"}},"id":453,"indexExpression":{"expression":{"id":451,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2470:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2474:6:4","memberName":"sender","nodeType":"MemberAccess","src":"2470:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2463:18:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage","typeString":"struct MezoVaultContract.Vault storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2441:40:4"},{"condition":{"expression":{"id":455,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2547:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2553:6:4","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":368,"src":"2547:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":463,"nodeType":"IfStatement","src":"2543:70:4","trueBody":{"id":462,"nodeType":"Block","src":"2561:52:4","statements":[{"expression":{"arguments":[{"expression":{"id":458,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2591:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2595:6:4","memberName":"sender","nodeType":"MemberAccess","src":"2591:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":457,"name":"_updateInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"2575:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2575:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":461,"nodeType":"ExpressionStatement","src":"2575:27:4"}]}},{"expression":{"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":464,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2631:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2637:16:4","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":362,"src":"2631:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":467,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"2657:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2631:32:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":469,"nodeType":"ExpressionStatement","src":"2631:32:4"},{"expression":{"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":470,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2673:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":472,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2679:6:4","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":368,"src":"2673:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2688:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2673:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":475,"nodeType":"ExpressionStatement","src":"2673:19:4"},{"expression":{"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":476,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2702:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2708:14:4","memberName":"lastUpdateTime","nodeType":"MemberAccess","referencedDeclaration":366,"src":"2702:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":479,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2725:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2731:9:4","memberName":"timestamp","nodeType":"MemberAccess","src":"2725:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":482,"nodeType":"ExpressionStatement","src":"2702:38:4"},{"expression":{"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":483,"name":"totalCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"2759:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":484,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"2778:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2759:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":486,"nodeType":"ExpressionStatement","src":"2759:25:4"},{"eventCall":{"arguments":[{"expression":{"id":488,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2828:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2832:6:4","memberName":"sender","nodeType":"MemberAccess","src":"2828:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":490,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"2840:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":487,"name":"CollateralDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"2808:19:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2808:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":492,"nodeType":"EmitStatement","src":"2803:44:4"}]},"documentation":{"id":425,"nodeType":"StructuredDocumentation","src":"2091:129:4","text":" @dev Deposit BTC collateral to create or increase vault\n @param amount Amount of BTC to deposit (in wei)"},"functionSelector":"bad4a01f","id":494,"implemented":true,"kind":"function","modifiers":[{"id":430,"kind":"modifierInvocation","modifierName":{"id":429,"name":"nonReentrant","nameLocations":["2285:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":288,"src":"2285:12:4"},"nodeType":"ModifierInvocation","src":"2285:12:4"}],"name":"depositCollateral","nameLocation":"2234:17:4","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"amount","nameLocation":"2260:6:4","nodeType":"VariableDeclaration","scope":494,"src":"2252:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"2252:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2251:16:4"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"2298:0:4"},"scope":1154,"src":"2225:629:4","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":593,"nodeType":"Block","src":"3040:933:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":503,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"3058:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3067:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3058:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3070:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""},"value":"Amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""}],"id":502,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3050:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":508,"nodeType":"ExpressionStatement","src":"3050:52:4"},{"assignments":[511],"declarations":[{"constant":false,"id":511,"mutability":"mutable","name":"vault","nameLocation":"3135:5:4","nodeType":"VariableDeclaration","scope":593,"src":"3121:19:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault"},"typeName":{"id":510,"nodeType":"UserDefinedTypeName","pathNode":{"id":509,"name":"Vault","nameLocations":["3121:5:4"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"3121:5:4"},"referencedDeclaration":369,"src":"3121:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault"}},"visibility":"internal"}],"id":516,"initialValue":{"baseExpression":{"id":512,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"3143:6:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vault_$369_storage_$","typeString":"mapping(address => struct MezoVaultContract.Vault storage ref)"}},"id":515,"indexExpression":{"expression":{"id":513,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3150:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3154:6:4","memberName":"sender","nodeType":"MemberAccess","src":"3150:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3143:18:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage","typeString":"struct MezoVaultContract.Vault storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3121:40:4"},{"expression":{"arguments":[{"expression":{"id":518,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"3179:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3185:6:4","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":368,"src":"3179:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c7420646f6573206e6f74206578697374","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3193:22:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_fad3b943c62e0b597f1872b66abe3ea991f0d7aea9cb8b9d9866b8d37e264497","typeString":"literal_string \"Vault does not exist\""},"value":"Vault does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fad3b943c62e0b597f1872b66abe3ea991f0d7aea9cb8b9d9866b8d37e264497","typeString":"literal_string \"Vault does not exist\""}],"id":517,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3171:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3171:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"3171:45:4"},{"expression":{"arguments":[{"expression":{"id":524,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3251:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3255:6:4","memberName":"sender","nodeType":"MemberAccess","src":"3251:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":523,"name":"_updateInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"3235:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3235:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":527,"nodeType":"ExpressionStatement","src":"3235:27:4"},{"assignments":[529],"declarations":[{"constant":false,"id":529,"mutability":"mutable","name":"newBorrowedAmount","nameLocation":"3289:17:4","nodeType":"VariableDeclaration","scope":593,"src":"3281:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":528,"name":"uint256","nodeType":"ElementaryTypeName","src":"3281:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":534,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":530,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"3309:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3315:14:4","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":364,"src":"3309:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":532,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"3332:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3309:29:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3281:57:4"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":537,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"3382:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":538,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3388:16:4","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":362,"src":"3382:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":539,"name":"newBorrowedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3406:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":536,"name":"_isHealthyCollateralRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"3356:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) view returns (bool)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420636f6c6c61746572616c","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3426:25:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa","typeString":"literal_string \"Insufficient collateral\""},"value":"Insufficient collateral"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa","typeString":"literal_string \"Insufficient collateral\""}],"id":535,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3348:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3348:104:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":543,"nodeType":"ExpressionStatement","src":"3348:104:4"},{"expression":{"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":544,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"3471:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3477:14:4","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":364,"src":"3471:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":547,"name":"newBorrowedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3494:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3471:40:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":549,"nodeType":"ExpressionStatement","src":"3471:40:4"},{"expression":{"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":550,"name":"totalBorrowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"3521:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":551,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"3538:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3521:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":553,"nodeType":"ExpressionStatement","src":"3521:23:4"},{"clauses":[{"block":{"id":562,"nodeType":"Block","src":"3678:42:4","statements":[]},"errorName":"","id":563,"nodeType":"TryCatchClause","src":"3678:42:4"},{"block":{"id":578,"nodeType":"Block","src":"3755:85:4","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"4d696e74696e67206661696c65643a20","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3800:18:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_93b483b13884ab3a2bf951e404f80804351253e45d1e5a439a8d26abb0f24750","typeString":"literal_string \"Minting failed: \""},"value":"Minting failed: "},{"id":573,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"3820:6:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_93b483b13884ab3a2bf951e404f80804351253e45d1e5a439a8d26abb0f24750","typeString":"literal_string \"Minting failed: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":570,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3783:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3787:12:4","memberName":"encodePacked","nodeType":"MemberAccess","src":"3783:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3783:44:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3776:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":568,"name":"string","nodeType":"ElementaryTypeName","src":"3776:6:4","typeDescriptions":{}}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3776:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":567,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3769:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3769:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"ExpressionStatement","src":"3769:60:4"}]},"errorName":"Error","id":579,"nodeType":"TryCatchClause","parameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"reason","nameLocation":"3747:6:4","nodeType":"VariableDeclaration","scope":579,"src":"3733:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":564,"name":"string","nodeType":"ElementaryTypeName","src":"3733:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3732:22:4"},"src":"3721:119:4"},{"block":{"id":584,"nodeType":"Block","src":"3847:64:4","statements":[{"expression":{"arguments":[{"hexValue":"4d696e74696e67206661696c65643a20556e6b6e6f776e206572726f72","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3868:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_21903436c0255e420a0734096311ffbf9b71cbd74b74774fa3fbd65842d66ed2","typeString":"literal_string \"Minting failed: Unknown error\""},"value":"Minting failed: Unknown error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_21903436c0255e420a0734096311ffbf9b71cbd74b74774fa3fbd65842d66ed2","typeString":"literal_string \"Minting failed: Unknown error\""}],"id":580,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3861:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":583,"nodeType":"ExpressionStatement","src":"3861:39:4"}]},"errorName":"","id":585,"nodeType":"TryCatchClause","src":"3841:70:4"}],"externalCall":{"arguments":[{"expression":{"id":558,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3658:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3662:6:4","memberName":"sender","nodeType":"MemberAccess","src":"3658:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":560,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"3670:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":555,"name":"musdToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"3642:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":554,"name":"IMUSDToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"3631:10:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMUSDToken_$344_$","typeString":"type(contract IMUSDToken)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3631:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMUSDToken_$344","typeString":"contract IMUSDToken"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3653:4:4","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":336,"src":"3631:26:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3631:46:4","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"TryStatement","src":"3627:284:4"},{"eventCall":{"arguments":[{"expression":{"id":588,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3947:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3951:6:4","memberName":"sender","nodeType":"MemberAccess","src":"3947:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":590,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"3959:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":587,"name":"MUSDBorrowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"3934:12:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3934:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":592,"nodeType":"EmitStatement","src":"3929:37:4"}]},"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"2864:113:4","text":" @dev Borrow MUSD against BTC collateral\n @param amount Amount of MUSD to borrow (in wei)"},"functionSelector":"211f0277","id":594,"implemented":true,"kind":"function","modifiers":[{"id":500,"kind":"modifierInvocation","modifierName":{"id":499,"name":"nonReentrant","nameLocations":["3027:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":288,"src":"3027:12:4"},"nodeType":"ModifierInvocation","src":"3027:12:4"}],"name":"borrowMUSD","nameLocation":"2991:10:4","nodeType":"FunctionDefinition","parameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"amount","nameLocation":"3010:6:4","nodeType":"VariableDeclaration","scope":594,"src":"3002:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":496,"name":"uint256","nodeType":"ElementaryTypeName","src":"3002:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3001:16:4"},"returnParameters":{"id":501,"nodeType":"ParameterList","parameters":[],"src":"3040:0:4"},"scope":1154,"src":"2982:991:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":679,"nodeType":"Block","src":"4390:726:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4408:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4417:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4408:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4420:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""},"value":"Amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""}],"id":602,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4400:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4400:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":608,"nodeType":"ExpressionStatement","src":"4400:52:4"},{"assignments":[611],"declarations":[{"constant":false,"id":611,"mutability":"mutable","name":"vault","nameLocation":"4485:5:4","nodeType":"VariableDeclaration","scope":679,"src":"4471:19:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault"},"typeName":{"id":610,"nodeType":"UserDefinedTypeName","pathNode":{"id":609,"name":"Vault","nameLocations":["4471:5:4"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"4471:5:4"},"referencedDeclaration":369,"src":"4471:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault"}},"visibility":"internal"}],"id":616,"initialValue":{"baseExpression":{"id":612,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"4493:6:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vault_$369_storage_$","typeString":"mapping(address => struct MezoVaultContract.Vault storage ref)"}},"id":615,"indexExpression":{"expression":{"id":613,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4500:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4504:6:4","memberName":"sender","nodeType":"MemberAccess","src":"4500:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4493:18:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage","typeString":"struct MezoVaultContract.Vault storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4471:40:4"},{"expression":{"arguments":[{"expression":{"id":618,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"4529:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":619,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4535:6:4","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":368,"src":"4529:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c7420646f6573206e6f74206578697374","id":620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4543:22:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_fad3b943c62e0b597f1872b66abe3ea991f0d7aea9cb8b9d9866b8d37e264497","typeString":"literal_string \"Vault does not exist\""},"value":"Vault does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fad3b943c62e0b597f1872b66abe3ea991f0d7aea9cb8b9d9866b8d37e264497","typeString":"literal_string \"Vault does not exist\""}],"id":617,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4521:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4521:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":622,"nodeType":"ExpressionStatement","src":"4521:45:4"},{"expression":{"arguments":[{"expression":{"id":624,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4601:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4605:6:4","memberName":"sender","nodeType":"MemberAccess","src":"4601:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":623,"name":"_updateInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"4585:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":627,"nodeType":"ExpressionStatement","src":"4585:27:4"},{"assignments":[629],"declarations":[{"constant":false,"id":629,"mutability":"mutable","name":"actualRepayAmount","nameLocation":"4639:17:4","nodeType":"VariableDeclaration","scope":679,"src":"4631:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":628,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":638,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":630,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4659:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":631,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"4668:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4674:14:4","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":364,"src":"4668:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4659:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":636,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4714:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4659:61:4","trueExpression":{"expression":{"id":634,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"4691:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4697:14:4","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":364,"src":"4691:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4631:89:4"},{"expression":{"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":639,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"4739:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4745:14:4","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":364,"src":"4739:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":642,"name":"actualRepayAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4763:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4739:41:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":644,"nodeType":"ExpressionStatement","src":"4739:41:4"},{"expression":{"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":645,"name":"totalBorrowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"4790:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":646,"name":"actualRepayAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4807:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4790:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":648,"nodeType":"ExpressionStatement","src":"4790:34:4"},{"expression":{"arguments":[{"expression":{"id":653,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4929:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4933:6:4","memberName":"sender","nodeType":"MemberAccess","src":"4929:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":657,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4949:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_MezoVaultContract_$1154","typeString":"contract MezoVaultContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MezoVaultContract_$1154","typeString":"contract MezoVaultContract"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4941:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"4941:7:4","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4941:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"actualRepayAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4956:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":650,"name":"musdToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"4905:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":649,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"4898:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$225_$","typeString":"type(contract IERC20)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4898:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4916:12:4","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":224,"src":"4898:30:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4898:76:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"nodeType":"ExpressionStatement","src":"4898:76:4"},{"expression":{"arguments":[{"arguments":[{"id":668,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5019:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_MezoVaultContract_$1154","typeString":"contract MezoVaultContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MezoVaultContract_$1154","typeString":"contract MezoVaultContract"}],"id":667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5011:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:4","typeDescriptions":{}}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5011:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":670,"name":"actualRepayAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"5026:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":663,"name":"musdToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"4995:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":662,"name":"IMUSDToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"4984:10:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMUSDToken_$344_$","typeString":"type(contract IMUSDToken)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4984:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMUSDToken_$344","typeString":"contract IMUSDToken"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5006:4:4","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":343,"src":"4984:26:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4984:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":672,"nodeType":"ExpressionStatement","src":"4984:60:4"},{"eventCall":{"arguments":[{"expression":{"id":674,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5079:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:4","memberName":"sender","nodeType":"MemberAccess","src":"5079:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":676,"name":"actualRepayAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"5091:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":673,"name":"MUSDRepaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"5068:10:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5068:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"EmitStatement","src":"5063:46:4"}]},"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"3983:345:4","text":" @dev Repay MUSD debt (partial or full repayment supported)\n @param amount Amount of MUSD to repay (in wei)\n @notice Partial repayment is allowed. If amount > debt, only the debt amount is repaid.\n         If amount < debt, the exact amount specified is repaid and remaining debt continues to accrue interest."},"functionSelector":"78f3ef22","id":680,"implemented":true,"kind":"function","modifiers":[{"id":600,"kind":"modifierInvocation","modifierName":{"id":599,"name":"nonReentrant","nameLocations":["4377:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":288,"src":"4377:12:4"},"nodeType":"ModifierInvocation","src":"4377:12:4"}],"name":"repayMUSD","nameLocation":"4342:9:4","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"amount","nameLocation":"4360:6:4","nodeType":"VariableDeclaration","scope":680,"src":"4352:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"4352:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4351:16:4"},"returnParameters":{"id":601,"nodeType":"ParameterList","parameters":[],"src":"4390:0:4"},"scope":1154,"src":"4333:783:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":776,"nodeType":"Block","src":"5300:1098:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":689,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"5318:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5327:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5318:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5330:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""},"value":"Amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""}],"id":688,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5310:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5310:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":694,"nodeType":"ExpressionStatement","src":"5310:52:4"},{"assignments":[697],"declarations":[{"constant":false,"id":697,"mutability":"mutable","name":"vault","nameLocation":"5395:5:4","nodeType":"VariableDeclaration","scope":776,"src":"5381:19:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault"},"typeName":{"id":696,"nodeType":"UserDefinedTypeName","pathNode":{"id":695,"name":"Vault","nameLocations":["5381:5:4"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"5381:5:4"},"referencedDeclaration":369,"src":"5381:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault"}},"visibility":"internal"}],"id":702,"initialValue":{"baseExpression":{"id":698,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"5403:6:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vault_$369_storage_$","typeString":"mapping(address => struct MezoVaultContract.Vault storage ref)"}},"id":701,"indexExpression":{"expression":{"id":699,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5410:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5414:6:4","memberName":"sender","nodeType":"MemberAccess","src":"5410:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5403:18:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage","typeString":"struct MezoVaultContract.Vault storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5381:40:4"},{"expression":{"arguments":[{"expression":{"id":704,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"5439:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5445:6:4","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":368,"src":"5439:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c7420646f6573206e6f74206578697374","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5453:22:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_fad3b943c62e0b597f1872b66abe3ea991f0d7aea9cb8b9d9866b8d37e264497","typeString":"literal_string \"Vault does not exist\""},"value":"Vault does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fad3b943c62e0b597f1872b66abe3ea991f0d7aea9cb8b9d9866b8d37e264497","typeString":"literal_string \"Vault does not exist\""}],"id":703,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5431:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5431:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":708,"nodeType":"ExpressionStatement","src":"5431:45:4"},{"expression":{"arguments":[{"expression":{"id":710,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5511:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5515:6:4","memberName":"sender","nodeType":"MemberAccess","src":"5511:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":709,"name":"_updateInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5495:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5495:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"5495:27:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":715,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"5589:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":716,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5595:16:4","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":362,"src":"5589:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":717,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"5615:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5589:32:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420636f6c6c61746572616c","id":719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5623:25:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa","typeString":"literal_string \"Insufficient collateral\""},"value":"Insufficient collateral"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa","typeString":"literal_string \"Insufficient collateral\""}],"id":714,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5581:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5581:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":721,"nodeType":"ExpressionStatement","src":"5581:68:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":722,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"5767:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":723,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5773:14:4","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":364,"src":"5767:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5790:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5767:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":743,"nodeType":"IfStatement","src":"5763:318:4","trueBody":{"id":742,"nodeType":"Block","src":"5793:288:4","statements":[{"assignments":[727],"declarations":[{"constant":false,"id":727,"mutability":"mutable","name":"remainingCollateral","nameLocation":"5876:19:4","nodeType":"VariableDeclaration","scope":742,"src":"5868:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":726,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":732,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":728,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"5898:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5904:16:4","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":362,"src":"5898:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":730,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"5923:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5898:31:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5868:61:4"},{"expression":{"arguments":[{"arguments":[{"id":735,"name":"remainingCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"5977:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":736,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"5998:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":737,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6004:14:4","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":364,"src":"5998:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":734,"name":"_isHealthyCollateralRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"5951:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) view returns (bool)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5951:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420636f6c6c61746572616c20726174696f206166746572207769746864726177616c","id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6021:48:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_a3b1eb41952f7c72efabb933be09a114c2c958af611217e59d5336630cdd0fda","typeString":"literal_string \"Insufficient collateral ratio after withdrawal\""},"value":"Insufficient collateral ratio after withdrawal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a3b1eb41952f7c72efabb933be09a114c2c958af611217e59d5336630cdd0fda","typeString":"literal_string \"Insufficient collateral ratio after withdrawal\""}],"id":733,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5943:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5943:127:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":741,"nodeType":"ExpressionStatement","src":"5943:127:4"}]}},{"assignments":[745],"declarations":[{"constant":false,"id":745,"mutability":"mutable","name":"newCollateralAmount","nameLocation":"6099:19:4","nodeType":"VariableDeclaration","scope":776,"src":"6091:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":744,"name":"uint256","nodeType":"ElementaryTypeName","src":"6091:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":750,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":746,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"6121:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6127:16:4","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":362,"src":"6121:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":748,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"6146:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6121:31:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6091:61:4"},{"expression":{"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":751,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"6162:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6168:16:4","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":362,"src":"6162:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":754,"name":"newCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"6187:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6162:44:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":756,"nodeType":"ExpressionStatement","src":"6162:44:4"},{"expression":{"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":757,"name":"totalCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"6216:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":758,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"6235:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6216:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":760,"nodeType":"ExpressionStatement","src":"6216:25:4"},{"expression":{"arguments":[{"id":767,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"6321:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":763,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6300:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6304:6:4","memberName":"sender","nodeType":"MemberAccess","src":"6300:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6292:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"6292:8:4","stateMutability":"payable","typeDescriptions":{}}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6292:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6312:8:4","memberName":"transfer","nodeType":"MemberAccess","src":"6292:28:4","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6292:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":769,"nodeType":"ExpressionStatement","src":"6292:36:4"},{"eventCall":{"arguments":[{"expression":{"id":771,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6372:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6376:6:4","memberName":"sender","nodeType":"MemberAccess","src":"6372:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":773,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"6384:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":770,"name":"CollateralWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"6352:19:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6352:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":775,"nodeType":"EmitStatement","src":"6347:44:4"}]},"documentation":{"id":681,"nodeType":"StructuredDocumentation","src":"5126:103:4","text":" @dev Withdraw BTC collateral\n @param amount Amount of BTC to withdraw (in wei)"},"functionSelector":"6112fe2e","id":777,"implemented":true,"kind":"function","modifiers":[{"id":686,"kind":"modifierInvocation","modifierName":{"id":685,"name":"nonReentrant","nameLocations":["5287:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":288,"src":"5287:12:4"},"nodeType":"ModifierInvocation","src":"5287:12:4"}],"name":"withdrawCollateral","nameLocation":"5243:18:4","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"amount","nameLocation":"5270:6:4","nodeType":"VariableDeclaration","scope":777,"src":"5262:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"5262:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5261:16:4"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"5300:0:4"},"scope":1154,"src":"5234:1164:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":843,"nodeType":"Block","src":"6690:916:4","statements":[{"assignments":[787],"declarations":[{"constant":false,"id":787,"mutability":"mutable","name":"vault","nameLocation":"6713:5:4","nodeType":"VariableDeclaration","scope":843,"src":"6700:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault"},"typeName":{"id":786,"nodeType":"UserDefinedTypeName","pathNode":{"id":785,"name":"Vault","nameLocations":["6700:5:4"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"6700:5:4"},"referencedDeclaration":369,"src":"6700:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault"}},"visibility":"internal"}],"id":791,"initialValue":{"baseExpression":{"id":788,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"6721:6:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vault_$369_storage_$","typeString":"mapping(address => struct MezoVaultContract.Vault storage ref)"}},"id":790,"indexExpression":{"id":789,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"6728:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6721:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage","typeString":"struct MezoVaultContract.Vault storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6700:33:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6747:13:4","subExpression":{"expression":{"id":792,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"6748:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault memory"}},"id":793,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6754:6:4","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":368,"src":"6748:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":795,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"6764:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault memory"}},"id":796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6770:16:4","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":362,"src":"6764:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6790:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6764:27:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6747:44:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":803,"nodeType":"IfStatement","src":"6743:83:4","trueBody":{"id":802,"nodeType":"Block","src":"6793:33:4","statements":[{"expression":{"hexValue":"30","id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6814:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":784,"id":801,"nodeType":"Return","src":"6807:8:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":804,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"6895:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault memory"}},"id":805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6901:14:4","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":364,"src":"6895:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6919:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6895:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":812,"nodeType":"IfStatement","src":"6891:85:4","trueBody":{"id":811,"nodeType":"Block","src":"6922:54:4","statements":[{"expression":{"expression":{"id":808,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"6943:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault memory"}},"id":809,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6949:16:4","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":362,"src":"6943:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":784,"id":810,"nodeType":"Return","src":"6936:29:4"}]}},{"assignments":[814],"declarations":[{"constant":false,"id":814,"mutability":"mutable","name":"requiredCollateral","nameLocation":"7310:18:4","nodeType":"VariableDeclaration","scope":843,"src":"7302:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"7302:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":825,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":815,"name":"MIN_COLLATERAL_RATIO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"7332:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":816,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"7355:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault memory"}},"id":817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7361:14:4","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":364,"src":"7355:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7332:43:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7331:45:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":820,"name":"BTC_PRICE_USD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"7380:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303030","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7396:5:4","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"7380:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7379:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7331:71:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7302:100:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":826,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"7417:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault memory"}},"id":827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7423:16:4","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":362,"src":"7417:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":828,"name":"requiredCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"7443:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7417:44:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":833,"nodeType":"IfStatement","src":"7413:83:4","trueBody":{"id":832,"nodeType":"Block","src":"7463:33:4","statements":[{"expression":{"hexValue":"30","id":830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7484:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":784,"id":831,"nodeType":"Return","src":"7477:8:4"}]}},{"assignments":[835],"declarations":[{"constant":false,"id":835,"mutability":"mutable","name":"maxWithdraw","nameLocation":"7514:11:4","nodeType":"VariableDeclaration","scope":843,"src":"7506:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"7506:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":840,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":836,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"7528:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault memory"}},"id":837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7534:16:4","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":362,"src":"7528:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":838,"name":"requiredCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"7553:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7528:43:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7506:65:4"},{"expression":{"id":841,"name":"maxWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"7588:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":784,"id":842,"nodeType":"Return","src":"7581:18:4"}]},"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"6404:207:4","text":" @dev Compute maximum BTC withdrawable while staying above the minimum collateral ratio\n @param user User address\n @return Amount of BTC (in wei) that can be withdrawn right now"},"functionSelector":"652f3a3f","id":844,"implemented":true,"kind":"function","modifiers":[],"name":"getMaxWithdrawable","nameLocation":"6625:18:4","nodeType":"FunctionDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"user","nameLocation":"6652:4:4","nodeType":"VariableDeclaration","scope":844,"src":"6644:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"6644:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6643:14:4"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"6681:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":782,"name":"uint256","nodeType":"ElementaryTypeName","src":"6681:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6680:9:4"},"scope":1154,"src":"6616:990:4","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":881,"nodeType":"Block","src":"7876:455:4","statements":[{"assignments":[854],"declarations":[{"constant":false,"id":854,"mutability":"mutable","name":"vault","nameLocation":"7899:5:4","nodeType":"VariableDeclaration","scope":881,"src":"7886:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault"},"typeName":{"id":853,"nodeType":"UserDefinedTypeName","pathNode":{"id":852,"name":"Vault","nameLocations":["7886:5:4"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"7886:5:4"},"referencedDeclaration":369,"src":"7886:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault"}},"visibility":"internal"}],"id":858,"initialValue":{"baseExpression":{"id":855,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"7907:6:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vault_$369_storage_$","typeString":"mapping(address => struct MezoVaultContract.Vault storage ref)"}},"id":857,"indexExpression":{"id":856,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"7914:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7907:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage","typeString":"struct MezoVaultContract.Vault storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7886:33:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":859,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"7933:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault memory"}},"id":860,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7939:14:4","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":364,"src":"7933:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7957:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7933:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":865,"nodeType":"IfStatement","src":"7929:39:4","trueBody":{"expression":{"hexValue":"30","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7967:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":851,"id":864,"nodeType":"Return","src":"7960:8:4"}},{"assignments":[867],"declarations":[{"constant":false,"id":867,"mutability":"mutable","name":"collateralValue","nameLocation":"8203:15:4","nodeType":"VariableDeclaration","scope":881,"src":"8195:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"8195:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":872,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":868,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"8221:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault memory"}},"id":869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8227:16:4","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":362,"src":"8221:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":870,"name":"BTC_PRICE_USD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"8246:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8221:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8195:64:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":873,"name":"collateralValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"8277:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303030","id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8295:5:4","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"8277:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":876,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8276:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":877,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"8304:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault memory"}},"id":878,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8310:14:4","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":364,"src":"8304:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8276:48:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":851,"id":880,"nodeType":"Return","src":"8269:55:4"}]},"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"7651:146:4","text":" @dev Get user's collateral ratio\n @param user User address\n @return Collateral ratio in basis points (11000 = 110%)"},"functionSelector":"15a3ba43","id":882,"implemented":true,"kind":"function","modifiers":[],"name":"getCollateralRatio","nameLocation":"7811:18:4","nodeType":"FunctionDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"user","nameLocation":"7838:4:4","nodeType":"VariableDeclaration","scope":882,"src":"7830:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"7830:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7829:14:4"},"returnParameters":{"id":851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":882,"src":"7867:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"7867:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7866:9:4"},"scope":1154,"src":"7802:529:4","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":910,"nodeType":"Block","src":"8538:179:4","statements":[{"assignments":[891],"declarations":[{"constant":false,"id":891,"mutability":"mutable","name":"collateralRatio","nameLocation":"8556:15:4","nodeType":"VariableDeclaration","scope":910,"src":"8548:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"8548:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":896,"initialValue":{"arguments":[{"id":894,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"8598:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":892,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8574:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_MezoVaultContract_$1154","typeString":"contract MezoVaultContract"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8579:18:4","memberName":"getCollateralRatio","nodeType":"MemberAccess","referencedDeclaration":882,"src":"8574:23:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8574:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8548:55:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":897,"name":"collateralRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"8617:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8617:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":902,"nodeType":"IfStatement","src":"8613:34:4","trueBody":{"expression":{"hexValue":"30","id":900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8646:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":889,"id":901,"nodeType":"Return","src":"8639:8:4"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":903,"name":"collateralRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"8665:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:3:4","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"8665:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":906,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8664:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":907,"name":"MIN_COLLATERAL_RATIO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"8690:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8664:46:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":889,"id":909,"nodeType":"Return","src":"8657:53:4"}]},"documentation":{"id":883,"nodeType":"StructuredDocumentation","src":"8341:121:4","text":" @dev Get user's health factor\n @param user User address\n @return Health factor (100 = 1.0)"},"functionSelector":"fe6bcd7c","id":911,"implemented":true,"kind":"function","modifiers":[],"name":"getHealthFactor","nameLocation":"8476:15:4","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"user","nameLocation":"8500:4:4","nodeType":"VariableDeclaration","scope":911,"src":"8492:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"8492:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8491:14:4"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":911,"src":"8529:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":887,"name":"uint256","nodeType":"ElementaryTypeName","src":"8529:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8528:9:4"},"scope":1154,"src":"8467:250:4","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":924,"nodeType":"Block","src":"8933:53:4","statements":[{"expression":{"expression":{"baseExpression":{"id":919,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"8950:6:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vault_$369_storage_$","typeString":"mapping(address => struct MezoVaultContract.Vault storage ref)"}},"id":921,"indexExpression":{"id":920,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"8957:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8950:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage","typeString":"struct MezoVaultContract.Vault storage ref"}},"id":922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8963:16:4","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":362,"src":"8950:29:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":918,"id":923,"nodeType":"Return","src":"8943:36:4"}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"8727:125:4","text":" @dev Get user's collateral balance\n @param user User address\n @return Collateral amount in wei"},"functionSelector":"2703ee85","id":925,"implemented":true,"kind":"function","modifiers":[],"name":"getCollateralBalance","nameLocation":"8866:20:4","nodeType":"FunctionDefinition","parameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"user","nameLocation":"8895:4:4","nodeType":"VariableDeclaration","scope":925,"src":"8887:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"8887:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8886:14:4"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":925,"src":"8924:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"8924:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8923:9:4"},"scope":1154,"src":"8857:129:4","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":938,"nodeType":"Block","src":"9194:51:4","statements":[{"expression":{"expression":{"baseExpression":{"id":933,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"9211:6:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vault_$369_storage_$","typeString":"mapping(address => struct MezoVaultContract.Vault storage ref)"}},"id":935,"indexExpression":{"id":934,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"9218:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9211:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage","typeString":"struct MezoVaultContract.Vault storage ref"}},"id":936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9224:14:4","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":364,"src":"9211:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":932,"id":937,"nodeType":"Return","src":"9204:34:4"}]},"documentation":{"id":926,"nodeType":"StructuredDocumentation","src":"8996:120:4","text":" @dev Get user's borrowed amount\n @param user User address\n @return Borrowed amount in wei"},"functionSelector":"b9f2c7b5","id":939,"implemented":true,"kind":"function","modifiers":[],"name":"getBorrowedAmount","nameLocation":"9130:17:4","nodeType":"FunctionDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"user","nameLocation":"9156:4:4","nodeType":"VariableDeclaration","scope":939,"src":"9148:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":927,"name":"address","nodeType":"ElementaryTypeName","src":"9148:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9147:14:4"},"returnParameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":939,"src":"9185:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"9185:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9184:9:4"},"scope":1154,"src":"9121:124:4","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":994,"nodeType":"Block","src":"9531:360:4","statements":[{"assignments":[949],"declarations":[{"constant":false,"id":949,"mutability":"mutable","name":"vault","nameLocation":"9554:5:4","nodeType":"VariableDeclaration","scope":994,"src":"9541:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault"},"typeName":{"id":948,"nodeType":"UserDefinedTypeName","pathNode":{"id":947,"name":"Vault","nameLocations":["9541:5:4"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"9541:5:4"},"referencedDeclaration":369,"src":"9541:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault"}},"visibility":"internal"}],"id":953,"initialValue":{"baseExpression":{"id":950,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"9562:6:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vault_$369_storage_$","typeString":"mapping(address => struct MezoVaultContract.Vault storage ref)"}},"id":952,"indexExpression":{"id":951,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"9569:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9562:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage","typeString":"struct MezoVaultContract.Vault storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9541:33:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9588:13:4","subExpression":{"expression":{"id":954,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"9589:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault memory"}},"id":955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9595:6:4","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":368,"src":"9589:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":957,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"9605:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault memory"}},"id":958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9611:14:4","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":364,"src":"9605:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9629:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9605:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9588:42:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":965,"nodeType":"IfStatement","src":"9584:81:4","trueBody":{"id":964,"nodeType":"Block","src":"9632:33:4","statements":[{"expression":{"hexValue":"30","id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9653:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":946,"id":963,"nodeType":"Return","src":"9646:8:4"}]}},{"assignments":[967],"declarations":[{"constant":false,"id":967,"mutability":"mutable","name":"timeElapsed","nameLocation":"9682:11:4","nodeType":"VariableDeclaration","scope":994,"src":"9674:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"9674:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":973,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":968,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9696:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9702:9:4","memberName":"timestamp","nodeType":"MemberAccess","src":"9696:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":970,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"9714:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault memory"}},"id":971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9720:14:4","memberName":"lastUpdateTime","nodeType":"MemberAccess","referencedDeclaration":366,"src":"9714:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9696:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9674:60:4"},{"assignments":[975],"declarations":[{"constant":false,"id":975,"mutability":"mutable","name":"interest","nameLocation":"9752:8:4","nodeType":"VariableDeclaration","scope":994,"src":"9744:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":974,"name":"uint256","nodeType":"ElementaryTypeName","src":"9744:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":988,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":976,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"9764:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault memory"}},"id":977,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9770:14:4","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":364,"src":"9764:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":978,"name":"INTEREST_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"9787:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9764:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":980,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"9803:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9764:50:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9763:52:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_315360000000_by_1","typeString":"int_const 315360000000"},"id":985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"333635","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9819:8:4","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303030","id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:5:4","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"9819:16:4","typeDescriptions":{"typeIdentifier":"t_rational_315360000000_by_1","typeString":"int_const 315360000000"}}],"id":986,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9818:18:4","typeDescriptions":{"typeIdentifier":"t_rational_315360000000_by_1","typeString":"int_const 315360000000"}},"src":"9763:73:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9744:92:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":989,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"9853:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault memory"}},"id":990,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9859:14:4","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":364,"src":"9853:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":991,"name":"interest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"9876:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9853:31:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":946,"id":993,"nodeType":"Return","src":"9846:38:4"}]},"documentation":{"id":940,"nodeType":"StructuredDocumentation","src":"9255:201:4","text":" @dev Get user's current debt including accrued interest (read-only)\n @param user User address\n @return Current debt in wei (borrowed + accrued interest since last update)"},"functionSelector":"b86ef1cc","id":995,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentDebt","nameLocation":"9470:14:4","nodeType":"FunctionDefinition","parameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"user","nameLocation":"9493:4:4","nodeType":"VariableDeclaration","scope":995,"src":"9485:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":941,"name":"address","nodeType":"ElementaryTypeName","src":"9485:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9484:14:4"},"returnParameters":{"id":946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":995,"src":"9522:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":944,"name":"uint256","nodeType":"ElementaryTypeName","src":"9522:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9521:9:4"},"scope":1154,"src":"9461:430:4","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1003,"nodeType":"Block","src":"10059:37:4","statements":[{"expression":{"id":1001,"name":"INTEREST_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"10076:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1000,"id":1002,"nodeType":"Return","src":"10069:20:4"}]},"documentation":{"id":996,"nodeType":"StructuredDocumentation","src":"9901:94:4","text":" @dev Get current interest rate\n @return Interest rate in basis points"},"functionSelector":"5257b566","id":1004,"implemented":true,"kind":"function","modifiers":[],"name":"getInterestRate","nameLocation":"10009:15:4","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[],"src":"10024:2:4"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1004,"src":"10050:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":998,"name":"uint256","nodeType":"ElementaryTypeName","src":"10050:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10049:9:4"},"scope":1154,"src":"10000:96:4","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":1035,"nodeType":"Block","src":"10312:278:4","statements":[{"assignments":[1014],"declarations":[{"constant":false,"id":1014,"mutability":"mutable","name":"vault","nameLocation":"10335:5:4","nodeType":"VariableDeclaration","scope":1035,"src":"10322:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault"},"typeName":{"id":1013,"nodeType":"UserDefinedTypeName","pathNode":{"id":1012,"name":"Vault","nameLocations":["10322:5:4"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"10322:5:4"},"referencedDeclaration":369,"src":"10322:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault"}},"visibility":"internal"}],"id":1018,"initialValue":{"baseExpression":{"id":1015,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"10343:6:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vault_$369_storage_$","typeString":"mapping(address => struct MezoVaultContract.Vault storage ref)"}},"id":1017,"indexExpression":{"id":1016,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"10350:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10343:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage","typeString":"struct MezoVaultContract.Vault storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10322:33:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1019,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"10369:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault memory"}},"id":1020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10375:16:4","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":362,"src":"10369:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10395:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10369:27:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1025,"nodeType":"IfStatement","src":"10365:41:4","trueBody":{"expression":{"hexValue":"30","id":1023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10405:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1011,"id":1024,"nodeType":"Return","src":"10398:8:4"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1026,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"10514:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault memory"}},"id":1027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10520:14:4","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":364,"src":"10514:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1028,"name":"MIN_COLLATERAL_RATIO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"10537:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10514:43:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1030,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10513:45:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":1031,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"10561:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_memory_ptr","typeString":"struct MezoVaultContract.Vault memory"}},"id":1032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10567:16:4","memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":362,"src":"10561:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10513:70:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1011,"id":1034,"nodeType":"Return","src":"10506:77:4"}]},"documentation":{"id":1005,"nodeType":"StructuredDocumentation","src":"10106:126:4","text":" @dev Get liquidation price for user\n @param user User address\n @return Liquidation price in USD"},"functionSelector":"17d8de82","id":1036,"implemented":true,"kind":"function","modifiers":[],"name":"getLiquidationPrice","nameLocation":"10246:19:4","nodeType":"FunctionDefinition","parameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1007,"mutability":"mutable","name":"user","nameLocation":"10274:4:4","nodeType":"VariableDeclaration","scope":1036,"src":"10266:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"10266:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10265:14:4"},"returnParameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1036,"src":"10303:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"10303:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10302:9:4"},"scope":1154,"src":"10237:353:4","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1071,"nodeType":"Block","src":"10904:806:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1046,"name":"borrowedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"10918:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10936:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10918:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1051,"nodeType":"IfStatement","src":"10914:36:4","trueBody":{"expression":{"hexValue":"74727565","id":1049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10946:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1045,"id":1050,"nodeType":"Return","src":"10939:11:4"}},{"assignments":[1053],"declarations":[{"constant":false,"id":1053,"mutability":"mutable","name":"collateralValue","nameLocation":"11510:15:4","nodeType":"VariableDeclaration","scope":1071,"src":"11502:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1052,"name":"uint256","nodeType":"ElementaryTypeName","src":"11502:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1057,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1054,"name":"collateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"11528:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1055,"name":"BTC_PRICE_USD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"11547:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11528:32:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11502:58:4"},{"assignments":[1059],"declarations":[{"constant":false,"id":1059,"mutability":"mutable","name":"collateralRatio","nameLocation":"11578:15:4","nodeType":"VariableDeclaration","scope":1071,"src":"11570:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"11570:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1066,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1060,"name":"collateralValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"11597:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303030","id":1061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11615:5:4","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"11597:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1063,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11596:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1064,"name":"borrowedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"11624:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11596:42:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11570:68:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1067,"name":"collateralRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"11664:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1068,"name":"MIN_COLLATERAL_RATIO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"11683:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11664:39:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1045,"id":1070,"nodeType":"Return","src":"11657:46:4"}]},"documentation":{"id":1037,"nodeType":"StructuredDocumentation","src":"10600:185:4","text":" @dev Check if collateral ratio is healthy\n @param collateralAmount Collateral amount\n @param borrowedAmount Borrowed amount\n @return True if healthy"},"id":1072,"implemented":true,"kind":"function","modifiers":[],"name":"_isHealthyCollateralRatio","nameLocation":"10799:25:4","nodeType":"FunctionDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"collateralAmount","nameLocation":"10833:16:4","nodeType":"VariableDeclaration","scope":1072,"src":"10825:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"10825:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"borrowedAmount","nameLocation":"10859:14:4","nodeType":"VariableDeclaration","scope":1072,"src":"10851:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"10851:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10824:50:4"},"returnParameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1072,"src":"10898:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1043,"name":"bool","nodeType":"ElementaryTypeName","src":"10898:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10897:6:4"},"scope":1154,"src":"10790:920:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1127,"nodeType":"Block","src":"11856:378:4","statements":[{"assignments":[1080],"declarations":[{"constant":false,"id":1080,"mutability":"mutable","name":"vault","nameLocation":"11880:5:4","nodeType":"VariableDeclaration","scope":1127,"src":"11866:19:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault"},"typeName":{"id":1079,"nodeType":"UserDefinedTypeName","pathNode":{"id":1078,"name":"Vault","nameLocations":["11866:5:4"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"11866:5:4"},"referencedDeclaration":369,"src":"11866:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault"}},"visibility":"internal"}],"id":1084,"initialValue":{"baseExpression":{"id":1081,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"11888:6:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vault_$369_storage_$","typeString":"mapping(address => struct MezoVaultContract.Vault storage ref)"}},"id":1083,"indexExpression":{"id":1082,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"11895:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11888:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage","typeString":"struct MezoVaultContract.Vault storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11866:34:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1085,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"11914:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":1086,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11920:14:4","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":364,"src":"11914:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11938:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11914:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1090,"nodeType":"IfStatement","src":"11910:38:4","trueBody":{"functionReturnParameters":1077,"id":1089,"nodeType":"Return","src":"11941:7:4"}},{"assignments":[1092],"declarations":[{"constant":false,"id":1092,"mutability":"mutable","name":"timeElapsed","nameLocation":"11974:11:4","nodeType":"VariableDeclaration","scope":1127,"src":"11966:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1091,"name":"uint256","nodeType":"ElementaryTypeName","src":"11966:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1098,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1093,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11988:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11994:9:4","memberName":"timestamp","nodeType":"MemberAccess","src":"11988:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1095,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"12006:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":1096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12012:14:4","memberName":"lastUpdateTime","nodeType":"MemberAccess","referencedDeclaration":366,"src":"12006:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11988:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11966:60:4"},{"assignments":[1100],"declarations":[{"constant":false,"id":1100,"mutability":"mutable","name":"interest","nameLocation":"12044:8:4","nodeType":"VariableDeclaration","scope":1127,"src":"12036:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1099,"name":"uint256","nodeType":"ElementaryTypeName","src":"12036:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1113,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1101,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"12056:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":1102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12062:14:4","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":364,"src":"12056:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1103,"name":"INTEREST_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"12079:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12056:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1105,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"12095:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12056:50:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12055:52:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_315360000000_by_1","typeString":"int_const 315360000000"},"id":1110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"333635","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12111:8:4","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303030","id":1109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12122:5:4","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"12111:16:4","typeDescriptions":{"typeIdentifier":"t_rational_315360000000_by_1","typeString":"int_const 315360000000"}}],"id":1111,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12110:18:4","typeDescriptions":{"typeIdentifier":"t_rational_315360000000_by_1","typeString":"int_const 315360000000"}},"src":"12055:73:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12036:92:4"},{"expression":{"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1114,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"12147:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":1116,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12153:14:4","memberName":"borrowedAmount","nodeType":"MemberAccess","referencedDeclaration":364,"src":"12147:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1117,"name":"interest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"12171:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12147:32:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1119,"nodeType":"ExpressionStatement","src":"12147:32:4"},{"expression":{"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1120,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"12189:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$369_storage_ptr","typeString":"struct MezoVaultContract.Vault storage pointer"}},"id":1122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12195:14:4","memberName":"lastUpdateTime","nodeType":"MemberAccess","referencedDeclaration":366,"src":"12189:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1123,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12212:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12218:9:4","memberName":"timestamp","nodeType":"MemberAccess","src":"12212:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12189:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1126,"nodeType":"ExpressionStatement","src":"12189:38:4"}]},"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"11720:83:4","text":" @dev Update interest for a vault\n @param user User address"},"id":1128,"implemented":true,"kind":"function","modifiers":[],"name":"_updateInterest","nameLocation":"11817:15:4","nodeType":"FunctionDefinition","parameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"user","nameLocation":"11841:4:4","nodeType":"VariableDeclaration","scope":1128,"src":"11833:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"11833:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11832:14:4"},"returnParameters":{"id":1077,"nodeType":"ParameterList","parameters":[],"src":"11856:0:4"},"scope":1154,"src":"11808:426:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1147,"nodeType":"Block","src":"12381:65:4","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":1142,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12425:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_MezoVaultContract_$1154","typeString":"contract MezoVaultContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MezoVaultContract_$1154","typeString":"contract MezoVaultContract"}],"id":1141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12417:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"12417:7:4","typeDescriptions":{}}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12417:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12431:7:4","memberName":"balance","nodeType":"MemberAccess","src":"12417:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1136,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"12399:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12399:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12391:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"12391:8:4","stateMutability":"payable","typeDescriptions":{}}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12391:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12408:8:4","memberName":"transfer","nodeType":"MemberAccess","src":"12391:25:4","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12391:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1146,"nodeType":"ExpressionStatement","src":"12391:48:4"}]},"documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"12244:84:4","text":" @dev Emergency function to withdraw contract balance (owner only)"},"functionSelector":"db2e21bc","id":1148,"implemented":true,"kind":"function","modifiers":[{"id":1132,"kind":"modifierInvocation","modifierName":{"id":1131,"name":"onlyOwner","nameLocations":["12371:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"12371:9:4"},"nodeType":"ModifierInvocation","src":"12371:9:4"}],"name":"emergencyWithdraw","nameLocation":"12342:17:4","nodeType":"FunctionDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"12359:2:4"},"returnParameters":{"id":1133,"nodeType":"ParameterList","parameters":[],"src":"12381:0:4"},"scope":1154,"src":"12333:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1152,"nodeType":"Block","src":"12551:44:4","statements":[]},"documentation":{"id":1149,"nodeType":"StructuredDocumentation","src":"12456:63:4","text":" @dev Receive function to accept ETH deposits"},"id":1153,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[],"src":"12531:2:4"},"returnParameters":{"id":1151,"nodeType":"ParameterList","parameters":[],"src":"12551:0:4"},"scope":1154,"src":"12524:71:4","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1155,"src":"597:12000:4","usedErrors":[13,18,269],"usedEvents":[24,384,390,396,402,410]}],"src":"32:12566:4"},"id":4}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"contracts/MezoVaultContract.sol":{"IMUSDToken":{"abi":[{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"burn(address,uint256)":"9dc29fac","mint(address,uint256)":"40c10f19"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MezoVaultContract.sol\":\"IMUSDToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/MezoVaultContract.sol\":{\"keccak256\":\"0x5a8679ae4b4b21b2a76ab35faa3a76a6425dfd1f2ad9eef7cb25552f3a13c457\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7950abbcc42529efa4c92af70ff410e734168b34993dad1fe9c7fb50cc697241\",\"dweb:/ipfs/QmapkS1Tp8am65CAYekVRsttqwVvdJCnmWDtU3S4atDKGE\"]}},\"version\":1}"},"MezoVaultContract":{"abi":[{"inputs":[{"internalType":"address","name":"_musdToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"CollateralDeposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"CollateralWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"MUSDBorrowed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"MUSDRepaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"collateralAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"debtAmount","type":"uint256"}],"name":"VaultLiquidated","type":"event"},{"inputs":[],"name":"BTC_PRICE_USD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INTEREST_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_COLLATERAL_RATIO","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"borrowMUSD","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"depositCollateral","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getBorrowedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getCollateralBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getCollateralRatio","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getCurrentDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getHealthFactor","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getInterestRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getLiquidationPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getMaxWithdrawable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"musdToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"repayMUSD","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalBorrowed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalCollateral","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"vaults","outputs":[{"internalType":"uint256","name":"collateralAmount","type":"uint256"},{"internalType":"uint256","name":"borrowedAmount","type":"uint256"},{"internalType":"uint256","name":"lastUpdateTime","type":"uint256"},{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawCollateral","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60803460d657601f61125438819003918201601f19168301916001600160401b0383118484101760db5780849260209460405283398101031260d657516001600160a01b0381169081900360d6576001600055331560c05760018054336001600160a01b0319821681179092556040519291906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600280546001600160a01b03191691909117905561116290816100f28239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c908163154fefc214610b155750806315a3ba4314610ae457806317d8de8214610ab3578063211f0277146108a15780632703ee85146108645780634ac8eb5f146108465780634c19386c146108285780635257b5661461080c5780635b72a33a1461080c5780636112fe2e146106a8578063652f3a3f14610677578063715018a61461061a57806378f3ef22146104715780637a9fffb7146104555780638da5cb5b1461042c5780639d78d46b14610403578063a622ee7c1461039e578063b86ef1cc1461036d578063b9f2c7b51461032d578063bad4a01f1461023f578063db2e21bc146101ef578063f2fde38b1461015e5763fe6bcd7c0361000f573461015b57602036600319011261015b57600435906001600160a01b038216820361015b57602061015383610f9a565b604051908152f35b80fd5b503461015b57602036600319011261015b576004356001600160a01b038116908190036101eb5761018d611103565b80156101d757600180546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b5080fd5b503461015b578060031936011261015b57610208611103565b8080808060018060a01b03600154164790828215610236575bf11561022a5780f35b604051903d90823e3d90fd5b506108fc610221565b50602036600319011261015b5760043561025761102f565b610262811515610cce565b8034036102f1573382526003602052604082206003810160ff8154166102e3575b61028e838354610d5d565b8255600160ff198254161790556002429101556102ad81600454610d5d565b6004556040519081527fd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a135848014260203392a26001815580f35b6102ec33611051565b610283565b60405162461bcd60e51b8152602060048201526014602482015273125b98dbdc9c9958dd0811551208185b5bdd5b9d60621b6044820152606490fd5b503461015b57602036600319011261015b576004356001600160a01b038116908190036101eb576040826001926020945260038452200154604051908152f35b503461015b57602036600319011261015b57600435906001600160a01b038216820361015b57602061015383610ef9565b503461015b57602036600319011261015b576004356001600160a01b038116908190036101eb57816040916080935260036020522080549060018101549060ff6003600283015492015416916040519384526020840152604083015215156060820152f35b503461015b578060031936011261015b576002546040516001600160a01b039091168152602090f35b503461015b578060031936011261015b576001546040516001600160a01b039091168152602090f35b503461015b578060031936011261015b576020604051606e8152f35b503461015b57602036600319011261015b5760043561048e61102f565b610499811515610cce565b33825260036020526001604083206104b760ff600383015416610d1a565b6104c033611051565b018054918281111561060f57506104d78280610e4e565b90556104e581600554610e4e565b6005556002546040516323b872dd60e01b815233600482015230602482015260448101839052906020908290606490829087906001600160a01b03165af18015610604576105cc575b5060025482906001600160a01b0316803b156101eb57604051632770a7eb60e21b8152306004820152602481018490529082908290604490829084905af180156105c1576105ac575b50506040519081527fd8e31e478118d9c8ea5f823945962d1e74951bdee736d578121095bff7d5501860203392a26001815580f35b816105b691610b63565b6101eb578138610577565b6040513d84823e3d90fd5b6020813d6020116105fc575b816105e560209383610b63565b810103126105f85751801515811461052e575b8280fd5b3d91506105d8565b6040513d85823e3d90fd5b6104d7908093610e4e565b503461015b578060031936011261015b57610633611103565b600180546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461015b57602036600319011261015b57600435906001600160a01b038216820361015b57602061015383610e5b565b503461015b57602036600319011261015b576004356106c561102f565b8181156106d28115610cce565b3382526003602052604082206106ee60ff600383015416610d1a565b6106f733611051565b83815461070682821015610d6a565b60018301548061078d575b509061071c91610e4e565b905561072a83600454610e4e565b600455828291610783575b8280929181923390f115610776576040519081527fc30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d60203392a26001815580f35b50604051903d90823e3d90fd5b6108fc9150610735565b90945061079d6107a29286610e4e565b6110ba565b156107b05783859338610711565b60405162461bcd60e51b815260206004820152602e60248201527f496e73756666696369656e7420636f6c6c61746572616c20726174696f20616660448201526d1d195c881dda5d1a191c985dd85b60921b6064820152608490fd5b503461015b578060031936011261015b57602060405160fa8152f35b503461015b578060031936011261015b576020600554604051908152f35b503461015b578060031936011261015b576020600454604051908152f35b503461015b57602036600319011261015b576004356001600160a01b038116908190036101eb578160409160209352600383522054604051908152f35b503461015b57602036600319011261015b576004356108be61102f565b6108c9811515610cce565b3382526003602052604082206108e560ff600383015416610d1a565b6108ee33611051565b6001810161091061090b610903858454610d5d565b8094546110ba565b610d6a565b5561091d81600554610d5d565b6005556002546001600160a01b0316803b156105f8576040516340c10f1960e01b8152336004820152602481018390529083908290604490829084905af19081610a9f575b50610a6c57508060033d11610a5b575b506308c379a0146109c3575b60405162461bcd60e51b815260206004820152601d60248201527f4d696e74696e67206661696c65643a20556e6b6e6f776e206572726f720000006044820152606490fd5b6109cb610db6565b806109d6575061097e565b6044610a4d9160405190610a2560308360208101936f026b4b73a34b733903330b4b632b21d160851b8552610a148151809260208686019101610e2b565b81010301601f198101845283610b63565b60405193849262461bcd60e51b84526020600485015251809281602486015285850190610e2b565b601f01601f19168101030190fd5b9050600481803e5160e01c38610972565b6040519081527f20da8f6e39cc42d87e1a570c1a21fe80e2882e71d765e5543d17a0756449527860203392a26001815580f35b83610aac91949294610b63565b9138610962565b503461015b57602036600319011261015b57600435906001600160a01b038216820361015b57602061015383610c60565b503461015b57602036600319011261015b57600435906001600160a01b038216820361015b57602061015383610bce565b9050346101eb57816003193601126101eb578061c35060209252f35b6080810190811067ffffffffffffffff821117610b4d57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610b4d57604052565b81810292918115918404141715610b9857565b634e487b7160e01b600052601160045260246000fd5b8115610bb8570490565b634e487b7160e01b600052601260045260246000fd5b60018060a01b031660005260036020526040600020604051610bef81610b31565b815490818152600183015490606060ff6003602084019685885260028101546040860152015416151591015215610c595761c35081029080820461c3501481151715610b9857631dcd650002908082046127101490151715610b9857610c56915190610bae565b90565b5050600090565b60018060a01b03166000526003602052604060002060405190610c8282610b31565b805480835260ff6003600184015493846020870152600281015460408701520154161515606084015215610c5957606e810290808204606e1490151715610b9857610c56915190610bae565b15610cd557565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b15610d2157565b60405162461bcd60e51b815260206004820152601460248201527315985d5b1d08191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b91908201809211610b9857565b15610d7157565b60405162461bcd60e51b815260206004820152601760248201527f496e73756666696369656e7420636f6c6c61746572616c0000000000000000006044820152606490fd5b600060443d10610c56576040513d600319016004823e8051913d602484011167ffffffffffffffff841117610e25578282019283519167ffffffffffffffff8311610e1d573d84016003190185840160200111610e1d5750610c5692910160200190610b63565b949350505050565b92915050565b60005b838110610e3e5750506000910152565b8181015183820152602001610e2e565b91908203918211610b9857565b60018060a01b03166000526003602052604060002060405190610e7d82610b31565b805480835260ff6003600184015493846020870152600281015460408701520154161580159081606086015290610ef1575b610ee9578115610ee3575080606e0290606e820403610b9857631dcd6500900490519080821115610c5957610c5691610e4e565b91505090565b505050600090565b508015610eaf565b60018060a01b03166000526003602052604060002060405190610f1b82610b31565b8054825260606001820154602084019381855260ff600360028601549586604085015201541615908115938491015291610f91575b50610c5957610f5f9042610e4e565b9080519160fa83029280840460fa1490151715610b9857610f8964496cebb80091610c5694610b85565b049051610d5d565b90501538610f50565b6040516315a3ba4360e01b81526001600160a01b039091166004820152602081602481305afa90811561102357600091610ff1575b508015610feb5760648102908104606403610b9857606e900490565b50600090565b906020823d60201161101b575b8161100b60209383610b63565b8101031261015b57505138610fcf565b3d9150610ffe565b6040513d6000823e3d90fd5b600260005414611040576002600055565b633ee5aeb560e01b60005260046000fd5b6001600160a01b031660009081526003602052604090206001810180549182156110b55760020191611084835442610e4e565b9060fa81029181830460fa03610b98576110a764496cebb800916110ae94610b85565b0490610d5d565b9055429055565b505050565b81156110fc5761c35081029080820461c3501481151715610b9857631dcd650002908082046127101490151715610b9857606e916110f791610bae565b101590565b5050600190565b6001546001600160a01b0316330361111757565b63118cdaa760e01b6000523360045260246000fdfea264697066735822122043afd1c708a1489a0ed9b50e50b668dc86db8403aabba0b8d02920e98295fd7664736f6c634300081c0033","opcodes":"PUSH1 0x80 CALLVALUE PUSH1 0xD6 JUMPI PUSH1 0x1F PUSH2 0x1254 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xDB JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xD6 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH1 0xD6 JUMPI PUSH1 0x1 PUSH1 0x0 SSTORE CALLER ISZERO PUSH1 0xC0 JUMPI PUSH1 0x1 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1162 SWAP1 DUP2 PUSH2 0xF2 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x154FEFC2 EQ PUSH2 0xB15 JUMPI POP DUP1 PUSH4 0x15A3BA43 EQ PUSH2 0xAE4 JUMPI DUP1 PUSH4 0x17D8DE82 EQ PUSH2 0xAB3 JUMPI DUP1 PUSH4 0x211F0277 EQ PUSH2 0x8A1 JUMPI DUP1 PUSH4 0x2703EE85 EQ PUSH2 0x864 JUMPI DUP1 PUSH4 0x4AC8EB5F EQ PUSH2 0x846 JUMPI DUP1 PUSH4 0x4C19386C EQ PUSH2 0x828 JUMPI DUP1 PUSH4 0x5257B566 EQ PUSH2 0x80C JUMPI DUP1 PUSH4 0x5B72A33A EQ PUSH2 0x80C JUMPI DUP1 PUSH4 0x6112FE2E EQ PUSH2 0x6A8 JUMPI DUP1 PUSH4 0x652F3A3F EQ PUSH2 0x677 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0x78F3EF22 EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x7A9FFFB7 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x9D78D46B EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0xA622EE7C EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0xB86EF1CC EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xB9F2C7B5 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xBAD4A01F EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15E JUMPI PUSH4 0xFE6BCD7C SUB PUSH2 0xF JUMPI CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15B JUMPI PUSH1 0x20 PUSH2 0x153 DUP4 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1EB JUMPI PUSH2 0x18D PUSH2 0x1103 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15B JUMPI PUSH2 0x208 PUSH2 0x1103 JUMP JUMPDEST DUP1 DUP1 DUP1 DUP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND SELFBALANCE SWAP1 DUP3 DUP3 ISZERO PUSH2 0x236 JUMPI JUMPDEST CALL ISZERO PUSH2 0x22A JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x221 JUMP JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x257 PUSH2 0x102F JUMP JUMPDEST PUSH2 0x262 DUP2 ISZERO ISZERO PUSH2 0xCCE JUMP JUMPDEST DUP1 CALLVALUE SUB PUSH2 0x2F1 JUMPI CALLER DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD PUSH1 0xFF DUP2 SLOAD AND PUSH2 0x2E3 JUMPI JUMPDEST PUSH2 0x28E DUP4 DUP4 SLOAD PUSH2 0xD5D JUMP JUMPDEST DUP3 SSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 TIMESTAMP SWAP2 ADD SSTORE PUSH2 0x2AD DUP2 PUSH1 0x4 SLOAD PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xD7243F6F8212D5188FD054141CF6EA89CFC0D91FACB8C3AFE2F88A1358480142 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x2EC CALLER PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B98DBDC9C9958DD0811551208185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1EB JUMPI PUSH1 0x40 DUP3 PUSH1 0x1 SWAP3 PUSH1 0x20 SWAP5 MSTORE PUSH1 0x3 DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15B JUMPI PUSH1 0x20 PUSH2 0x153 DUP4 PUSH2 0xEF9 JUMP JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1EB JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH1 0x80 SWAP4 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x3 PUSH1 0x2 DUP4 ADD SLOAD SWAP3 ADD SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15B JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15B JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x6E DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x48E PUSH2 0x102F JUMP JUMPDEST PUSH2 0x499 DUP2 ISZERO ISZERO PUSH2 0xCCE JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 DUP4 KECCAK256 PUSH2 0x4B7 PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD AND PUSH2 0xD1A JUMP JUMPDEST PUSH2 0x4C0 CALLER PUSH2 0x1051 JUMP JUMPDEST ADD DUP1 SLOAD SWAP2 DUP3 DUP2 GT ISZERO PUSH2 0x60F JUMPI POP PUSH2 0x4D7 DUP3 DUP1 PUSH2 0xE4E JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x4E5 DUP2 PUSH1 0x5 SLOAD PUSH2 0xE4E JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x604 JUMPI PUSH2 0x5CC JUMPI JUMPDEST POP PUSH1 0x2 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x1EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x5C1 JUMPI PUSH2 0x5AC JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xD8E31E478118D9C8EA5F823945962D1E74951BDEE736D578121095BFF7D55018 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP2 PUSH2 0x5B6 SWAP2 PUSH2 0xB63 JUMP JUMPDEST PUSH2 0x1EB JUMPI DUP2 CODESIZE PUSH2 0x577 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5FC JUMPI JUMPDEST DUP2 PUSH2 0x5E5 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xB63 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5F8 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x52E JUMPI JUMPDEST DUP3 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x4D7 SWAP1 DUP1 SWAP4 PUSH2 0xE4E JUMP JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15B JUMPI PUSH2 0x633 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15B JUMPI PUSH1 0x20 PUSH2 0x153 DUP4 PUSH2 0xE5B JUMP JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x6C5 PUSH2 0x102F JUMP JUMPDEST DUP2 DUP2 ISZERO PUSH2 0x6D2 DUP2 ISZERO PUSH2 0xCCE JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH2 0x6EE PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD AND PUSH2 0xD1A JUMP JUMPDEST PUSH2 0x6F7 CALLER PUSH2 0x1051 JUMP JUMPDEST DUP4 DUP2 SLOAD PUSH2 0x706 DUP3 DUP3 LT ISZERO PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD DUP1 PUSH2 0x78D JUMPI JUMPDEST POP SWAP1 PUSH2 0x71C SWAP2 PUSH2 0xE4E JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x72A DUP4 PUSH1 0x4 SLOAD PUSH2 0xE4E JUMP JUMPDEST PUSH1 0x4 SSTORE DUP3 DUP3 SWAP2 PUSH2 0x783 JUMPI JUMPDEST DUP3 DUP1 SWAP3 SWAP2 DUP2 SWAP3 CALLER SWAP1 CALL ISZERO PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC30FCFBCAAC9E0DEFFA719714EAA82396FF506A0D0D0EEBE170830177288715D PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x735 JUMP JUMPDEST SWAP1 SWAP5 POP PUSH2 0x79D PUSH2 0x7A2 SWAP3 DUP7 PUSH2 0xE4E JUMP JUMPDEST PUSH2 0x10BA JUMP JUMPDEST ISZERO PUSH2 0x7B0 JUMPI DUP4 DUP6 SWAP4 CODESIZE PUSH2 0x711 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6C6C61746572616C20726174696F206166 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x1D195C881DDA5D1A191C985DD85B PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFA DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15B JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15B JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1EB JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH1 0x20 SWAP4 MSTORE PUSH1 0x3 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x8BE PUSH2 0x102F JUMP JUMPDEST PUSH2 0x8C9 DUP2 ISZERO ISZERO PUSH2 0xCCE JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH2 0x8E5 PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD AND PUSH2 0xD1A JUMP JUMPDEST PUSH2 0x8EE CALLER PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD PUSH2 0x910 PUSH2 0x90B PUSH2 0x903 DUP6 DUP5 SLOAD PUSH2 0xD5D JUMP JUMPDEST DUP1 SWAP5 SLOAD PUSH2 0x10BA JUMP JUMPDEST PUSH2 0xD6A JUMP JUMPDEST SSTORE PUSH2 0x91D DUP2 PUSH1 0x5 SLOAD PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP1 DUP2 PUSH2 0xA9F JUMPI JUMPDEST POP PUSH2 0xA6C JUMPI POP DUP1 PUSH1 0x3 RETURNDATASIZE GT PUSH2 0xA5B JUMPI JUMPDEST POP PUSH4 0x8C379A0 EQ PUSH2 0x9C3 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74696E67206661696C65643A20556E6B6E6F776E206572726F72000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x9CB PUSH2 0xDB6 JUMP JUMPDEST DUP1 PUSH2 0x9D6 JUMPI POP PUSH2 0x97E JUMP JUMPDEST PUSH1 0x44 PUSH2 0xA4D SWAP2 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xA25 PUSH1 0x30 DUP4 PUSH1 0x20 DUP2 ADD SWAP4 PUSH16 0x26B4B73A34B733903330B4B632B21D1 PUSH1 0x85 SHL DUP6 MSTORE PUSH2 0xA14 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xE2B JUMP JUMPDEST DUP2 ADD SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x20 PUSH1 0x4 DUP6 ADD MSTORE MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE DUP6 DUP6 ADD SWAP1 PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 DUP2 DUP1 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR CODESIZE PUSH2 0x972 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x20DA8F6E39CC42D87E1A570C1A21FE80E2882E71D765E5543D17A07564495278 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP4 PUSH2 0xAAC SWAP2 SWAP5 SWAP3 SWAP5 PUSH2 0xB63 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x962 JUMP JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15B JUMPI PUSH1 0x20 PUSH2 0x153 DUP4 PUSH2 0xC60 JUMP JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15B JUMPI PUSH1 0x20 PUSH2 0x153 DUP4 PUSH2 0xBCE JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1EB JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1EB JUMPI DUP1 PUSH2 0xC350 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB4D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB4D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xB98 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xBB8 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0xBEF DUP2 PUSH2 0xB31 JUMP JUMPDEST DUP2 SLOAD SWAP1 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP1 PUSH1 0x60 PUSH1 0xFF PUSH1 0x3 PUSH1 0x20 DUP5 ADD SWAP7 DUP6 DUP9 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE ISZERO PUSH2 0xC59 JUMPI PUSH2 0xC350 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH2 0xC350 EQ DUP2 ISZERO OR ISZERO PUSH2 0xB98 JUMPI PUSH4 0x1DCD6500 MUL SWAP1 DUP1 DUP3 DIV PUSH2 0x2710 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xB98 JUMPI PUSH2 0xC56 SWAP2 MLOAD SWAP1 PUSH2 0xBAE JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xC82 DUP3 PUSH2 0xB31 JUMP JUMPDEST DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0xFF PUSH1 0x3 PUSH1 0x1 DUP5 ADD SLOAD SWAP4 DUP5 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP8 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE ISZERO PUSH2 0xC59 JUMPI PUSH1 0x6E DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x6E EQ SWAP1 ISZERO OR ISZERO PUSH2 0xB98 JUMPI PUSH2 0xC56 SWAP2 MLOAD SWAP1 PUSH2 0xBAE JUMP JUMPDEST ISZERO PUSH2 0xCD5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xD21 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x15985D5B1D08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xB98 JUMPI JUMP JUMPDEST ISZERO PUSH2 0xD71 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6C6C61746572616C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0xC56 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD SWAP2 RETURNDATASIZE PUSH1 0x24 DUP5 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0xE25 JUMPI DUP3 DUP3 ADD SWAP3 DUP4 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE1D JUMPI RETURNDATASIZE DUP5 ADD PUSH1 0x3 NOT ADD DUP6 DUP5 ADD PUSH1 0x20 ADD GT PUSH2 0xE1D JUMPI POP PUSH2 0xC56 SWAP3 SWAP2 ADD PUSH1 0x20 ADD SWAP1 PUSH2 0xB63 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xE3E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE2E JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xB98 JUMPI JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xE7D DUP3 PUSH2 0xB31 JUMP JUMPDEST DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0xFF PUSH1 0x3 PUSH1 0x1 DUP5 ADD SLOAD SWAP4 DUP5 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP8 ADD MSTORE ADD SLOAD AND ISZERO DUP1 ISZERO SWAP1 DUP2 PUSH1 0x60 DUP7 ADD MSTORE SWAP1 PUSH2 0xEF1 JUMPI JUMPDEST PUSH2 0xEE9 JUMPI DUP2 ISZERO PUSH2 0xEE3 JUMPI POP DUP1 PUSH1 0x6E MUL SWAP1 PUSH1 0x6E DUP3 DIV SUB PUSH2 0xB98 JUMPI PUSH4 0x1DCD6500 SWAP1 DIV SWAP1 MLOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0xC59 JUMPI PUSH2 0xC56 SWAP2 PUSH2 0xE4E JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF1B DUP3 PUSH2 0xB31 JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x60 PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP5 ADD SWAP4 DUP2 DUP6 MSTORE PUSH1 0xFF PUSH1 0x3 PUSH1 0x2 DUP7 ADD SLOAD SWAP6 DUP7 PUSH1 0x40 DUP6 ADD MSTORE ADD SLOAD AND ISZERO SWAP1 DUP2 ISZERO SWAP4 DUP5 SWAP2 ADD MSTORE SWAP2 PUSH2 0xF91 JUMPI JUMPDEST POP PUSH2 0xC59 JUMPI PUSH2 0xF5F SWAP1 TIMESTAMP PUSH2 0xE4E JUMP JUMPDEST SWAP1 DUP1 MLOAD SWAP2 PUSH1 0xFA DUP4 MUL SWAP3 DUP1 DUP5 DIV PUSH1 0xFA EQ SWAP1 ISZERO OR ISZERO PUSH2 0xB98 JUMPI PUSH2 0xF89 PUSH5 0x496CEBB800 SWAP2 PUSH2 0xC56 SWAP5 PUSH2 0xB85 JUMP JUMPDEST DIV SWAP1 MLOAD PUSH2 0xD5D JUMP JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0xF50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x15A3BA43 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1023 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xFF1 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0xFEB JUMPI PUSH1 0x64 DUP2 MUL SWAP1 DUP2 DIV PUSH1 0x64 SUB PUSH2 0xB98 JUMPI PUSH1 0x6E SWAP1 DIV SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x101B JUMPI JUMPDEST DUP2 PUSH2 0x100B PUSH1 0x20 SWAP4 DUP4 PUSH2 0xB63 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15B JUMPI POP MLOAD CODESIZE PUSH2 0xFCF JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x1040 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP2 DUP3 ISZERO PUSH2 0x10B5 JUMPI PUSH1 0x2 ADD SWAP2 PUSH2 0x1084 DUP4 SLOAD TIMESTAMP PUSH2 0xE4E JUMP JUMPDEST SWAP1 PUSH1 0xFA DUP2 MUL SWAP2 DUP2 DUP4 DIV PUSH1 0xFA SUB PUSH2 0xB98 JUMPI PUSH2 0x10A7 PUSH5 0x496CEBB800 SWAP2 PUSH2 0x10AE SWAP5 PUSH2 0xB85 JUMP JUMPDEST DIV SWAP1 PUSH2 0xD5D JUMP JUMPDEST SWAP1 SSTORE TIMESTAMP SWAP1 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 ISZERO PUSH2 0x10FC JUMPI PUSH2 0xC350 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH2 0xC350 EQ DUP2 ISZERO OR ISZERO PUSH2 0xB98 JUMPI PUSH4 0x1DCD6500 MUL SWAP1 DUP1 DUP3 DIV PUSH2 0x2710 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xB98 JUMPI PUSH1 0x6E SWAP2 PUSH2 0x10F7 SWAP2 PUSH2 0xBAE JUMP JUMPDEST LT ISZERO SWAP1 JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1117 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xAF 0xD1 0xC7 ADDMOD LOG1 BASEFEE SWAP11 0xE 0xD9 0xB5 0xE POP 0xB6 PUSH9 0xDC86DB8403AABBA0B8 0xD0 0x29 KECCAK256 0xE9 DUP3 SWAP6 REVERT PUSH23 0x64736F6C634300081C0033000000000000000000000000 ","sourceMap":"597:12000:4:-:0;;;;;;;;;;;;;-1:-1:-1;;597:12000:4;;;;-1:-1:-1;;;;;597:12000:4;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;597:12000:4;;;;;;;;1857:1:3;-1:-1:-1;1857:1:3;2030:10:4;1273:26:0;1269:95;;1857:1:3;597:12000:4;;2030:10;-1:-1:-1;;;;;;597:12000:4;;;;;;;;;;;2030:10;-1:-1:-1;;;;;597:12000:4;3052:40:0;-1:-1:-1;;3052:40:0;2052:22:4;597:12000;;-1:-1:-1;;;;;;597:12000:4;;;;;;;;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;597:12000:4;;-1:-1:-1;1322:31:0;597:12000:4;-1:-1:-1;597:12000:4;;;;;;-1:-1:-1;597:12000:4;;;;;-1:-1:-1;597:12000:4"},"deployedBytecode":{"functionDebugData":{"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":3421,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":2990,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":2949,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":3662,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3627,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":2915,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_10766":{"entryPoint":2865,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":4355,"id":84,"parameterSlots":0,"returnSlots":0},"fun_getCollateralRatio":{"entryPoint":3022,"id":882,"parameterSlots":1,"returnSlots":1},"fun_getCurrentDebt":{"entryPoint":3833,"id":995,"parameterSlots":1,"returnSlots":1},"fun_getHealthFactor":{"entryPoint":3994,"id":911,"parameterSlots":1,"returnSlots":1},"fun_getLiquidationPrice":{"entryPoint":3168,"id":1036,"parameterSlots":1,"returnSlots":1},"fun_getMaxWithdrawable":{"entryPoint":3675,"id":844,"parameterSlots":1,"returnSlots":1},"fun_isHealthyCollateralRatio":{"entryPoint":4282,"id":1072,"parameterSlots":2,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":4143,"id":304,"parameterSlots":0,"returnSlots":0},"fun_updateInterest":{"entryPoint":4177,"id":1128,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_3e76":{"entryPoint":3278,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c9a6":{"entryPoint":3434,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_fad3":{"entryPoint":3354,"id":null,"parameterSlots":1,"returnSlots":0},"try_decode_error_message":{"entryPoint":3510,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x154FEFC2 EQ PUSH2 0xB15 JUMPI POP DUP1 PUSH4 0x15A3BA43 EQ PUSH2 0xAE4 JUMPI DUP1 PUSH4 0x17D8DE82 EQ PUSH2 0xAB3 JUMPI DUP1 PUSH4 0x211F0277 EQ PUSH2 0x8A1 JUMPI DUP1 PUSH4 0x2703EE85 EQ PUSH2 0x864 JUMPI DUP1 PUSH4 0x4AC8EB5F EQ PUSH2 0x846 JUMPI DUP1 PUSH4 0x4C19386C EQ PUSH2 0x828 JUMPI DUP1 PUSH4 0x5257B566 EQ PUSH2 0x80C JUMPI DUP1 PUSH4 0x5B72A33A EQ PUSH2 0x80C JUMPI DUP1 PUSH4 0x6112FE2E EQ PUSH2 0x6A8 JUMPI DUP1 PUSH4 0x652F3A3F EQ PUSH2 0x677 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0x78F3EF22 EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x7A9FFFB7 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x9D78D46B EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0xA622EE7C EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0xB86EF1CC EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xB9F2C7B5 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xBAD4A01F EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15E JUMPI PUSH4 0xFE6BCD7C SUB PUSH2 0xF JUMPI CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15B JUMPI PUSH1 0x20 PUSH2 0x153 DUP4 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1EB JUMPI PUSH2 0x18D PUSH2 0x1103 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15B JUMPI PUSH2 0x208 PUSH2 0x1103 JUMP JUMPDEST DUP1 DUP1 DUP1 DUP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND SELFBALANCE SWAP1 DUP3 DUP3 ISZERO PUSH2 0x236 JUMPI JUMPDEST CALL ISZERO PUSH2 0x22A JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x221 JUMP JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x257 PUSH2 0x102F JUMP JUMPDEST PUSH2 0x262 DUP2 ISZERO ISZERO PUSH2 0xCCE JUMP JUMPDEST DUP1 CALLVALUE SUB PUSH2 0x2F1 JUMPI CALLER DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD PUSH1 0xFF DUP2 SLOAD AND PUSH2 0x2E3 JUMPI JUMPDEST PUSH2 0x28E DUP4 DUP4 SLOAD PUSH2 0xD5D JUMP JUMPDEST DUP3 SSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 TIMESTAMP SWAP2 ADD SSTORE PUSH2 0x2AD DUP2 PUSH1 0x4 SLOAD PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xD7243F6F8212D5188FD054141CF6EA89CFC0D91FACB8C3AFE2F88A1358480142 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x2EC CALLER PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B98DBDC9C9958DD0811551208185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1EB JUMPI PUSH1 0x40 DUP3 PUSH1 0x1 SWAP3 PUSH1 0x20 SWAP5 MSTORE PUSH1 0x3 DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15B JUMPI PUSH1 0x20 PUSH2 0x153 DUP4 PUSH2 0xEF9 JUMP JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1EB JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH1 0x80 SWAP4 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x3 PUSH1 0x2 DUP4 ADD SLOAD SWAP3 ADD SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15B JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15B JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x6E DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x48E PUSH2 0x102F JUMP JUMPDEST PUSH2 0x499 DUP2 ISZERO ISZERO PUSH2 0xCCE JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 DUP4 KECCAK256 PUSH2 0x4B7 PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD AND PUSH2 0xD1A JUMP JUMPDEST PUSH2 0x4C0 CALLER PUSH2 0x1051 JUMP JUMPDEST ADD DUP1 SLOAD SWAP2 DUP3 DUP2 GT ISZERO PUSH2 0x60F JUMPI POP PUSH2 0x4D7 DUP3 DUP1 PUSH2 0xE4E JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x4E5 DUP2 PUSH1 0x5 SLOAD PUSH2 0xE4E JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x604 JUMPI PUSH2 0x5CC JUMPI JUMPDEST POP PUSH1 0x2 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x1EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x5C1 JUMPI PUSH2 0x5AC JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xD8E31E478118D9C8EA5F823945962D1E74951BDEE736D578121095BFF7D55018 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP2 PUSH2 0x5B6 SWAP2 PUSH2 0xB63 JUMP JUMPDEST PUSH2 0x1EB JUMPI DUP2 CODESIZE PUSH2 0x577 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5FC JUMPI JUMPDEST DUP2 PUSH2 0x5E5 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xB63 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5F8 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x52E JUMPI JUMPDEST DUP3 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x4D7 SWAP1 DUP1 SWAP4 PUSH2 0xE4E JUMP JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15B JUMPI PUSH2 0x633 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15B JUMPI PUSH1 0x20 PUSH2 0x153 DUP4 PUSH2 0xE5B JUMP JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x6C5 PUSH2 0x102F JUMP JUMPDEST DUP2 DUP2 ISZERO PUSH2 0x6D2 DUP2 ISZERO PUSH2 0xCCE JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH2 0x6EE PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD AND PUSH2 0xD1A JUMP JUMPDEST PUSH2 0x6F7 CALLER PUSH2 0x1051 JUMP JUMPDEST DUP4 DUP2 SLOAD PUSH2 0x706 DUP3 DUP3 LT ISZERO PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD DUP1 PUSH2 0x78D JUMPI JUMPDEST POP SWAP1 PUSH2 0x71C SWAP2 PUSH2 0xE4E JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x72A DUP4 PUSH1 0x4 SLOAD PUSH2 0xE4E JUMP JUMPDEST PUSH1 0x4 SSTORE DUP3 DUP3 SWAP2 PUSH2 0x783 JUMPI JUMPDEST DUP3 DUP1 SWAP3 SWAP2 DUP2 SWAP3 CALLER SWAP1 CALL ISZERO PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC30FCFBCAAC9E0DEFFA719714EAA82396FF506A0D0D0EEBE170830177288715D PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x735 JUMP JUMPDEST SWAP1 SWAP5 POP PUSH2 0x79D PUSH2 0x7A2 SWAP3 DUP7 PUSH2 0xE4E JUMP JUMPDEST PUSH2 0x10BA JUMP JUMPDEST ISZERO PUSH2 0x7B0 JUMPI DUP4 DUP6 SWAP4 CODESIZE PUSH2 0x711 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6C6C61746572616C20726174696F206166 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x1D195C881DDA5D1A191C985DD85B PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFA DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15B JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15B JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1EB JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH1 0x20 SWAP4 MSTORE PUSH1 0x3 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x8BE PUSH2 0x102F JUMP JUMPDEST PUSH2 0x8C9 DUP2 ISZERO ISZERO PUSH2 0xCCE JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH2 0x8E5 PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD AND PUSH2 0xD1A JUMP JUMPDEST PUSH2 0x8EE CALLER PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD PUSH2 0x910 PUSH2 0x90B PUSH2 0x903 DUP6 DUP5 SLOAD PUSH2 0xD5D JUMP JUMPDEST DUP1 SWAP5 SLOAD PUSH2 0x10BA JUMP JUMPDEST PUSH2 0xD6A JUMP JUMPDEST SSTORE PUSH2 0x91D DUP2 PUSH1 0x5 SLOAD PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP1 DUP2 PUSH2 0xA9F JUMPI JUMPDEST POP PUSH2 0xA6C JUMPI POP DUP1 PUSH1 0x3 RETURNDATASIZE GT PUSH2 0xA5B JUMPI JUMPDEST POP PUSH4 0x8C379A0 EQ PUSH2 0x9C3 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74696E67206661696C65643A20556E6B6E6F776E206572726F72000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x9CB PUSH2 0xDB6 JUMP JUMPDEST DUP1 PUSH2 0x9D6 JUMPI POP PUSH2 0x97E JUMP JUMPDEST PUSH1 0x44 PUSH2 0xA4D SWAP2 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xA25 PUSH1 0x30 DUP4 PUSH1 0x20 DUP2 ADD SWAP4 PUSH16 0x26B4B73A34B733903330B4B632B21D1 PUSH1 0x85 SHL DUP6 MSTORE PUSH2 0xA14 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xE2B JUMP JUMPDEST DUP2 ADD SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x20 PUSH1 0x4 DUP6 ADD MSTORE MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE DUP6 DUP6 ADD SWAP1 PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 DUP2 DUP1 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR CODESIZE PUSH2 0x972 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x20DA8F6E39CC42D87E1A570C1A21FE80E2882E71D765E5543D17A07564495278 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP4 PUSH2 0xAAC SWAP2 SWAP5 SWAP3 SWAP5 PUSH2 0xB63 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x962 JUMP JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15B JUMPI PUSH1 0x20 PUSH2 0x153 DUP4 PUSH2 0xC60 JUMP JUMPDEST POP CALLVALUE PUSH2 0x15B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15B JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15B JUMPI PUSH1 0x20 PUSH2 0x153 DUP4 PUSH2 0xBCE JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1EB JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1EB JUMPI DUP1 PUSH2 0xC350 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB4D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB4D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xB98 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xBB8 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0xBEF DUP2 PUSH2 0xB31 JUMP JUMPDEST DUP2 SLOAD SWAP1 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP1 PUSH1 0x60 PUSH1 0xFF PUSH1 0x3 PUSH1 0x20 DUP5 ADD SWAP7 DUP6 DUP9 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE ISZERO PUSH2 0xC59 JUMPI PUSH2 0xC350 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH2 0xC350 EQ DUP2 ISZERO OR ISZERO PUSH2 0xB98 JUMPI PUSH4 0x1DCD6500 MUL SWAP1 DUP1 DUP3 DIV PUSH2 0x2710 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xB98 JUMPI PUSH2 0xC56 SWAP2 MLOAD SWAP1 PUSH2 0xBAE JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xC82 DUP3 PUSH2 0xB31 JUMP JUMPDEST DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0xFF PUSH1 0x3 PUSH1 0x1 DUP5 ADD SLOAD SWAP4 DUP5 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP8 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE ISZERO PUSH2 0xC59 JUMPI PUSH1 0x6E DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x6E EQ SWAP1 ISZERO OR ISZERO PUSH2 0xB98 JUMPI PUSH2 0xC56 SWAP2 MLOAD SWAP1 PUSH2 0xBAE JUMP JUMPDEST ISZERO PUSH2 0xCD5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xD21 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x15985D5B1D08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xB98 JUMPI JUMP JUMPDEST ISZERO PUSH2 0xD71 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6C6C61746572616C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0xC56 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD SWAP2 RETURNDATASIZE PUSH1 0x24 DUP5 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0xE25 JUMPI DUP3 DUP3 ADD SWAP3 DUP4 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE1D JUMPI RETURNDATASIZE DUP5 ADD PUSH1 0x3 NOT ADD DUP6 DUP5 ADD PUSH1 0x20 ADD GT PUSH2 0xE1D JUMPI POP PUSH2 0xC56 SWAP3 SWAP2 ADD PUSH1 0x20 ADD SWAP1 PUSH2 0xB63 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xE3E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE2E JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xB98 JUMPI JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xE7D DUP3 PUSH2 0xB31 JUMP JUMPDEST DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0xFF PUSH1 0x3 PUSH1 0x1 DUP5 ADD SLOAD SWAP4 DUP5 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP8 ADD MSTORE ADD SLOAD AND ISZERO DUP1 ISZERO SWAP1 DUP2 PUSH1 0x60 DUP7 ADD MSTORE SWAP1 PUSH2 0xEF1 JUMPI JUMPDEST PUSH2 0xEE9 JUMPI DUP2 ISZERO PUSH2 0xEE3 JUMPI POP DUP1 PUSH1 0x6E MUL SWAP1 PUSH1 0x6E DUP3 DIV SUB PUSH2 0xB98 JUMPI PUSH4 0x1DCD6500 SWAP1 DIV SWAP1 MLOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0xC59 JUMPI PUSH2 0xC56 SWAP2 PUSH2 0xE4E JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF1B DUP3 PUSH2 0xB31 JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x60 PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP5 ADD SWAP4 DUP2 DUP6 MSTORE PUSH1 0xFF PUSH1 0x3 PUSH1 0x2 DUP7 ADD SLOAD SWAP6 DUP7 PUSH1 0x40 DUP6 ADD MSTORE ADD SLOAD AND ISZERO SWAP1 DUP2 ISZERO SWAP4 DUP5 SWAP2 ADD MSTORE SWAP2 PUSH2 0xF91 JUMPI JUMPDEST POP PUSH2 0xC59 JUMPI PUSH2 0xF5F SWAP1 TIMESTAMP PUSH2 0xE4E JUMP JUMPDEST SWAP1 DUP1 MLOAD SWAP2 PUSH1 0xFA DUP4 MUL SWAP3 DUP1 DUP5 DIV PUSH1 0xFA EQ SWAP1 ISZERO OR ISZERO PUSH2 0xB98 JUMPI PUSH2 0xF89 PUSH5 0x496CEBB800 SWAP2 PUSH2 0xC56 SWAP5 PUSH2 0xB85 JUMP JUMPDEST DIV SWAP1 MLOAD PUSH2 0xD5D JUMP JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0xF50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x15A3BA43 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1023 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xFF1 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0xFEB JUMPI PUSH1 0x64 DUP2 MUL SWAP1 DUP2 DIV PUSH1 0x64 SUB PUSH2 0xB98 JUMPI PUSH1 0x6E SWAP1 DIV SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x101B JUMPI JUMPDEST DUP2 PUSH2 0x100B PUSH1 0x20 SWAP4 DUP4 PUSH2 0xB63 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15B JUMPI POP MLOAD CODESIZE PUSH2 0xFCF JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x1040 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP2 DUP3 ISZERO PUSH2 0x10B5 JUMPI PUSH1 0x2 ADD SWAP2 PUSH2 0x1084 DUP4 SLOAD TIMESTAMP PUSH2 0xE4E JUMP JUMPDEST SWAP1 PUSH1 0xFA DUP2 MUL SWAP2 DUP2 DUP4 DIV PUSH1 0xFA SUB PUSH2 0xB98 JUMPI PUSH2 0x10A7 PUSH5 0x496CEBB800 SWAP2 PUSH2 0x10AE SWAP5 PUSH2 0xB85 JUMP JUMPDEST DIV SWAP1 PUSH2 0xD5D JUMP JUMPDEST SWAP1 SSTORE TIMESTAMP SWAP1 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 ISZERO PUSH2 0x10FC JUMPI PUSH2 0xC350 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH2 0xC350 EQ DUP2 ISZERO OR ISZERO PUSH2 0xB98 JUMPI PUSH4 0x1DCD6500 MUL SWAP1 DUP1 DUP3 DIV PUSH2 0x2710 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xB98 JUMPI PUSH1 0x6E SWAP2 PUSH2 0x10F7 SWAP2 PUSH2 0xBAE JUMP JUMPDEST LT ISZERO SWAP1 JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1117 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xAF 0xD1 0xC7 ADDMOD LOG1 BASEFEE SWAP11 0xE 0xD9 0xB5 0xE POP 0xB6 PUSH9 0xDC86DB8403AABBA0B8 0xD0 0x29 KECCAK256 0xE9 DUP3 SWAP6 REVERT PUSH23 0x64736F6C634300081C0033000000000000000000000000 ","sourceMap":"597:12000:4:-:0;;;;;;;;;;-1:-1:-1;597:12000:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;597:12000:4;;;;;;;-1:-1:-1;;;;;597:12000:4;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;597:12000:4;;;;;;-1:-1:-1;;;;;597:12000:4;;;;;;;;1500:62:0;;:::i;:::-;2627:22;;2623:91;;3004:6;597:12000:4;;-1:-1:-1;;;;;;597:12000:4;;;;;;;-1:-1:-1;;;;;597:12000:4;3052:40:0;;;;597:12000:4;;2623:91:0;-1:-1:-1;;;2672:31:0;;597:12000:4;;;;;2672:31:0;;597:12000:4;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;597:12000:4;;;;;;;;;1710:6:0;597:12000:4;;12417:21;12391:48;;;;;;597:12000;12391:48;;;;597:12000;;12391:48;597:12000;;;;;;;;;;12391:48;;;;;597:12000;-1:-1:-1;597:12000:4;;-1:-1:-1;;597:12000:4;;;;;;2466:103:3;;:::i;:::-;2308:52:4;2316:10;;;2308:52;:::i;:::-;2378:9;;:19;597:12000;;2470:10;597:12000;;2463:6;597:12000;;;;;2463:6;2547:12;;597:12000;;;;2543:70;;597:12000;2631:32;597:12000;;;2631:32;:::i;:::-;597:12000;;;;;;;;;;;2702:20;2725:15;2702:20;;597:12000;2759:25;597:12000;;;2759:25;:::i;:::-;597:12000;;;;;;;2808:39;597:12000;2470:10;2808:39;;597:12000;;;;;2543:70;2591:10;2470;2591;:::i;:::-;2543:70;;597:12000;;;-1:-1:-1;;;597:12000:4;;;;;;;;;;;;-1:-1:-1;;;597:12000:4;;;;;;;;;;;;;;-1:-1:-1;;597:12000:4;;;;;;-1:-1:-1;;;;;597:12000:4;;;;;;;;;;9211:27;597:12000;;;;9211:6;597:12000;;;9211:27;597:12000;;;;;;;;;;;;;;-1:-1:-1;;597:12000:4;;;;;;;-1:-1:-1;;;;;597:12000:4;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;597:12000:4;;;;;;-1:-1:-1;;;;;597:12000:4;;;;;;;;;;;;;;1394:39;597:12000;;;;;1394:39;;;;597:12000;1394:39;597:12000;1394:39;;;;597:12000;1394:39;;597:12000;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;725:24;597:12000;;;-1:-1:-1;;;;;597:12000:4;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;597:12000:4;;;;;;;;;;;;;;;;;;;;;;;;846:3;597:12000;;;;;;;;;;-1:-1:-1;;597:12000:4;;;;;;2466:103:3;;:::i;:::-;4400:52:4;4408:10;;;4400:52;:::i;:::-;4500:10;597:12000;;4493:6;597:12000;;;;;;4521:45;597:12000;4493:6;4529:12;;597:12000;;4521:45;:::i;:::-;4601:10;4500;4601;:::i;:::-;4668:20;597:12000;;;4659:29;;;;;;-1:-1:-1;4739:41:4;4659:61;;4739:41;:::i;:::-;597:12000;;4790:34;597:12000;4790:34;597:12000;4790:34;:::i;:::-;;597:12000;4905:9;597:12000;;;-1:-1:-1;;;4898:76:4;;4500:10;597:12000;4898:76;;597:12000;4949:4;597:12000;;;;;;;;;;;;;;;4898:76;;597:12000;;;;-1:-1:-1;;;;;597:12000:4;4898:76;;;;;;;;4659:61;-1:-1:-1;4905:9:4;597:12000;;;-1:-1:-1;;;;;597:12000:4;4984:60;;;;;597:12000;;-1:-1:-1;;;4984:60:4;;4949:4;597:12000;4984:60;;597:12000;;;;;;;;;;;;;;;;;;4984:60;;;;;;;;4659:61;597:12000;;;;;;;5068:41;597:12000;4500:10;5068:41;;597:12000;;;;;4984:60;;;;;:::i;:::-;597:12000;;4984:60;;;;;597:12000;;;;;;;;;4898:76;597:12000;4898:76;;597:12000;4898:76;;;;;;597:12000;4898:76;;;:::i;:::-;;;597:12000;;;;;;;;;;4898:76;597:12000;;;;;4898:76;;;-1:-1:-1;4898:76:4;;;597:12000;;;;;;;;;4659:61;4739:41;4659:61;;;4739:41;:::i;597:12000::-;;;;;;;;;;;;;1500:62:0;;:::i;:::-;3004:6;597:12000:4;;-1:-1:-1;;;;;;597:12000:4;;;;;;;-1:-1:-1;;;;;597:12000:4;3052:40:0;597:12000:4;;3052:40:0;597:12000:4;;;;;;;;;-1:-1:-1;;597:12000:4;;;;;;;-1:-1:-1;;;;;597:12000:4;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;597:12000:4;;;;;;2466:103:3;;:::i;:::-;5318:10:4;;;5310:52;5318:10;;5310:52;:::i;:::-;5410:10;597:12000;;5403:6;597:12000;;;;;5431:45;597:12000;5403:6;5439:12;;597:12000;;5431:45;:::i;:::-;5511:10;5410;5511;:::i;:::-;597:12000;;;5581:68;5589:32;;;;5581:68;:::i;:::-;597:12000;5767:20;;597:12000;5767:24;5763:318;;597:12000;6121:31;;;;;:::i;:::-;597:12000;;6216:25;597:12000;;;6216:25;:::i;:::-;597:12000;;6292:36;;;;;597:12000;5410:10;;;;;;;6292:36;;;;;597:12000;;;;;6352:39;597:12000;5410:10;6352:39;;597:12000;;;;;6292:36;597:12000;;;;;;;;;;;6292:36;;;-1:-1:-1;6292:36:4;;5763:318;5898:31;;;;5951:68;5898:31;;;:::i;:::-;5951:68;:::i;:::-;597:12000;;;5763:318;;;;;;597:12000;;;-1:-1:-1;;;597:12000:4;;;;;;;;;;;;;;;;;-1:-1:-1;;;597:12000:4;;;;;;;;;;;;;;;;;;;;;;;937:3;597:12000;;;;;;;;;;;;;;;;;1525:28;597:12000;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;597:12000:4;;;;;;-1:-1:-1;;;;;597:12000:4;;;;;;;;;;;;;;8950:6;597:12000;;;;;;;;;;;;;;;;;-1:-1:-1;;597:12000:4;;;;;;2466:103:3;;:::i;:::-;3050:52:4;3058:10;;;3050:52;:::i;:::-;3150:10;597:12000;;3143:6;597:12000;;;;;3171:45;597:12000;3143:6;3179:12;;597:12000;;3171:45;:::i;:::-;3251:10;3150;3251;:::i;:::-;597:12000;3309:20;;3348:104;3356:68;3309:29;597:12000;;;3309:29;:::i;:::-;597:12000;;;3356:68;:::i;:::-;3348:104;:::i;:::-;597:12000;3521:23;597:12000;3521:23;597:12000;3521:23;:::i;:::-;;597:12000;3642:9;597:12000;-1:-1:-1;;;;;597:12000:4;3631:46;;;;;597:12000;;-1:-1:-1;;;3631:46:4;;3150:10;597:12000;3631:46;;597:12000;;;;;;;;;;;;;;;;;;3631:46;;;;;;597:12000;-1:-1:-1;3627:284:4;;;;3143:6;597:12000;;;;3627:284;;;;;;;597:12000;;-1:-1:-1;;;3861:39:4;;597:12000;;3861:39;;597:12000;;;;;;;;;;;3861:39;;;3627:284;3721:119;;:::i;:::-;;;;3627:284;;;3721:119;597:12000;;;;;3783:44;;597:12000;3783:44;597:12000;3783:44;;597:12000;-1:-1:-1;;;597:12000:4;;;;;;;;;;;;;;:::i;:::-;;;3783:44;;;;;;;;;;:::i;:::-;597:12000;;3769:60;;;;;;;;597:12000;;3769:60;;597:12000;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;597:12000:4;;;3769:60;;;;597:12000;;;;;;;;;;;;;3627:284;597:12000;;;;;3934:32;597:12000;3150:10;3934:32;;597:12000;;;;;3631:46;;;;;;;;:::i;:::-;;;;;597:12000;;;;;;;-1:-1:-1;;597:12000:4;;;;;;;-1:-1:-1;;;;;597:12000:4;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;597:12000:4;;;;;;;-1:-1:-1;;;;;597:12000:4;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;1075:5;597:12000;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;597:12000:4;;;;;-1:-1:-1;597:12000:4;;;;3783:44;;597:12000;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;7802:529;597:12000;;;;;;;;7907:6;597:12000;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;7907:6;597:12000;;;;;;;;;;;;;;;;;;;;;;;7933:25;7929:39;;1075:5;597:12000;;;;;;1075:5;597:12000;;;;;;;;;;;;;8295:5;597:12000;;;;;;;8276:48;597:12000;;8276:48;;:::i;:::-;7802:529;:::o;7929:39::-;7960:8;;597:12000;7960:8;:::o;10237:353::-;597:12000;;;;;;;;10343:6;597:12000;;;;;;;;;;;:::i;:::-;;;;;;;10343:6;597:12000;;;;;;;;;;;;;;;;;;;;;;;;;;;10369:27;10365:41;;846:3;597:12000;;;;;;846:3;597:12000;;;;;;;10513:70;597:12000;;10513:70;;:::i;597:12000::-;;;;:::o;:::-;;;-1:-1:-1;;;597:12000:4;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;597:12000:4;;;;;;;;;;;;-1:-1:-1;;;597:12000:4;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;597:12000:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;597:12000:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;597:12000:4;;;;;;;;;-1:-1:-1;597:12000:4;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;597:12000:4;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;6616:990::-;597:12000;;;;;;;;6721:6;597:12000;;;;;;;;;;;:::i;:::-;;;;;;;6721:6;597:12000;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6747:44;;;6616:990;6743:83;;6895:25;;6891:85;;597:12000;;846:3;597:12000;;846:3;597:12000;;;;;;7331:71;597:12000;;;7417:44;;;;;7413:83;;7528:43;;;:::i;6891:85::-;6936:29;;;;:::o;6743:83::-;6807:8;;;597:12000;6807:8;:::o;6747:44::-;6764:27;;;6747:44;;9461:430;597:12000;;;;;;;;9562:6;597:12000;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;9562:6;597:12000;;;;;;;;;;;;;;;;;;;;;;9588:42;;;9461:430;9584:81;;;9696:38;:15;;:38;:::i;:::-;597:12000;;;;937:3;597:12000;;;;;;937:3;597:12000;;;;;;;9764:50;9819:16;9764:50;9853:31;9764:50;;:::i;:::-;597:12000;;;9853:31;:::i;9588:42::-;9605:25;;;9588:42;;;8467:250;597:12000;;-1:-1:-1;;;8574:29:4;;-1:-1:-1;;;;;597:12000:4;;;8574:29;;;597:12000;;;8574:29;597:12000;8574:4;:29;;;;;;;597:12000;8574:29;;;8467:250;8617:20;;;8613:34;;8683:3;597:12000;;;;;8683:3;597:12000;;;846:3;597:12000;;8467:250;:::o;8613:34::-;8639:8;597:12000;8639:8;:::o;8574:29::-;;597:12000;8574:29;;597:12000;8574:29;;;;;;597:12000;8574:29;;;:::i;:::-;;;597:12000;;;;;;8574:29;;;;;;-1:-1:-1;8574:29:4;;;597:12000;;;;;;;;;2575:307:3;1899:1;2702:7;597:12000:4;2702:18:3;2698:86;;1899:1;2702:7;597:12000:4;2575:307:3:o;2698:86::-;2743:30;;;2702:7;2743:30;;2702:7;2743:30;11808:426:4;-1:-1:-1;;;;;597:12000:4;-1:-1:-1;597:12000:4;;;11888:6;597:12000;;;;;;11914:20;;597:12000;;;11914:25;;11910:38;;12006:20;;597:12000;11988:38;597:12000;;11988:15;:38;:::i;:::-;597:12000;937:3;597:12000;;;;;;937:3;597:12000;;;12056:50;12111:16;12056:50;12147:32;12056:50;;:::i;:::-;597:12000;12147:32;;:::i;:::-;597:12000;;11988:15;597:12000;;11808:426::o;11910:38::-;11941:7;;;:::o;10790:920::-;10918:19;;10914:36;;1075:5;597:12000;;;;;;1075:5;597:12000;;;;;;;;;;;;;11615:5;597:12000;;;;;;;846:3;11596:42;;;;:::i;:::-;11664:39;;10790:920;:::o;10914:36::-;10939:11;;10946:4;10939:11;:::o;1796:162:0:-;597:12000:4;;-1:-1:-1;;;;;597:12000:4;735:10:2;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:0;735:10:2;1901:40:0;597:12000:4;;-1:-1:-1;1901:40:0"},"methodIdentifiers":{"BTC_PRICE_USD()":"154fefc2","INTEREST_RATE()":"5b72a33a","MIN_COLLATERAL_RATIO()":"7a9fffb7","borrowMUSD(uint256)":"211f0277","depositCollateral(uint256)":"bad4a01f","emergencyWithdraw()":"db2e21bc","getBorrowedAmount(address)":"b9f2c7b5","getCollateralBalance(address)":"2703ee85","getCollateralRatio(address)":"15a3ba43","getCurrentDebt(address)":"b86ef1cc","getHealthFactor(address)":"fe6bcd7c","getInterestRate()":"5257b566","getLiquidationPrice(address)":"17d8de82","getMaxWithdrawable(address)":"652f3a3f","musdToken()":"9d78d46b","owner()":"8da5cb5b","renounceOwnership()":"715018a6","repayMUSD(uint256)":"78f3ef22","totalBorrowed()":"4c19386c","totalCollateral()":"4ac8eb5f","transferOwnership(address)":"f2fde38b","vaults(address)":"a622ee7c","withdrawCollateral(uint256)":"6112fe2e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_musdToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MUSDBorrowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MUSDRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtAmount\",\"type\":\"uint256\"}],\"name\":\"VaultLiquidated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BTC_PRICE_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INTEREST_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_COLLATERAL_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrowMUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getBorrowedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getCollateralBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getCollateralRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getCurrentDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getHealthFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getLiquidationPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getMaxWithdrawable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"musdToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"repayMUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBorrowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vaults\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"A vault contract that integrates with Mezo's MUSD system This contract allows users to deposit BTC collateral and borrow MUSD\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"borrowMUSD(uint256)\":{\"details\":\"Borrow MUSD against BTC collateral\",\"params\":{\"amount\":\"Amount of MUSD to borrow (in wei)\"}},\"depositCollateral(uint256)\":{\"details\":\"Deposit BTC collateral to create or increase vault\",\"params\":{\"amount\":\"Amount of BTC to deposit (in wei)\"}},\"emergencyWithdraw()\":{\"details\":\"Emergency function to withdraw contract balance (owner only)\"},\"getBorrowedAmount(address)\":{\"details\":\"Get user's borrowed amount\",\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Borrowed amount in wei\"}},\"getCollateralBalance(address)\":{\"details\":\"Get user's collateral balance\",\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Collateral amount in wei\"}},\"getCollateralRatio(address)\":{\"details\":\"Get user's collateral ratio\",\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Collateral ratio in basis points (11000 = 110%)\"}},\"getCurrentDebt(address)\":{\"details\":\"Get user's current debt including accrued interest (read-only)\",\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Current debt in wei (borrowed + accrued interest since last update)\"}},\"getHealthFactor(address)\":{\"details\":\"Get user's health factor\",\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Health factor (100 = 1.0)\"}},\"getInterestRate()\":{\"details\":\"Get current interest rate\",\"returns\":{\"_0\":\"Interest rate in basis points\"}},\"getLiquidationPrice(address)\":{\"details\":\"Get liquidation price for user\",\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Liquidation price in USD\"}},\"getMaxWithdrawable(address)\":{\"details\":\"Compute maximum BTC withdrawable while staying above the minimum collateral ratio\",\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Amount of BTC (in wei) that can be withdrawn right now\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"repayMUSD(uint256)\":{\"details\":\"Repay MUSD debt (partial or full repayment supported)\",\"params\":{\"amount\":\"Amount of MUSD to repay (in wei)\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawCollateral(uint256)\":{\"details\":\"Withdraw BTC collateral\",\"params\":{\"amount\":\"Amount of BTC to withdraw (in wei)\"}}},\"title\":\"MezoVaultContract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"repayMUSD(uint256)\":{\"notice\":\"Partial repayment is allowed. If amount > debt, only the debt amount is repaid.         If amount < debt, the exact amount specified is repaid and remaining debt continues to accrue interest.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MezoVaultContract.sol\":\"MezoVaultContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/MezoVaultContract.sol\":{\"keccak256\":\"0x5a8679ae4b4b21b2a76ab35faa3a76a6425dfd1f2ad9eef7cb25552f3a13c457\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7950abbcc42529efa4c92af70ff410e734168b34993dad1fe9c7fb50cc697241\",\"dweb:/ipfs/QmapkS1Tp8am65CAYekVRsttqwVvdJCnmWDtU3S4atDKGE\"]}},\"version\":1}"}}}}}